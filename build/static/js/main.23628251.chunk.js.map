{"version":3,"sources":["components/GroupDetail/Layout/MainNavigation.module.css","components/PasswordResetForm/PasswordResetForm.module.css","components/NewGroupForm/IndividualForm.module.css","components/NewGroupForm/RemoveMemberErrorModal.module.css","components/NewGroupForm/RemoveMemberConfirmationModal.module.css","components/NewGroupForm/CreateGroupErrorModal.module.css","components/NewGroupForm/CreateGroupConfirmationModal.module.css","components/NewGroupForm/CancelSplittingConfirmationModal.module.css","components/UI/FormModal.module.css","components/UI/Background.module.css","components/AddNewGroup/NewGroupModalContent.module.css","components/UI/ModalButton.module.css","components/AddNewGroup/CloseBtn.module.css","components/NewGroupForm/NewGroupForm.module.css","components/NewGroupForm/GroupFormHeader.module.css","components/NewGroupForm/AddGroupMemberBtn.module.css","components/NewGroupForm/NewGroupBtnDanger.module.css","components/NewGroupForm/NewGroupBtnSuccess.module.css","components/NewGroupForm/NewGroupBtnSecondary.module.css","components/NewGroupForm/Card.module.css","components/NewGroupForm/Button.module.css","components/NewGroupForm/NewMemberModal.module.css","components/NewGroupForm/CloseBtn.module.css","components/NewGroupForm/NewGroupBtnFormSubmission.module.css","components/NewGroupForm/NewGroupBtnFormCancellation.module.css","components/Login/PasswordResetEmailFormModal.module.css","components/GroupDetail/SettleUp/ReminderModal.module.css","components/GroupDetail/SettleUp/CloseBtn.module.css","components/GroupDetail/SettleUp/ConfirmBtn.module.css","components/GroupDetail/SettleUp/PaymentConfirmationModal.module.css","components/GroupDetail/Layout/Layout.module.css","components/PasswordUpdateFormModal/PasswordUpdateFormModal.module.css","components/PasswordUpdateFormModal/ConfirmBtn.module.css","components/Groups/Header.js","components/GroupDetail/SettleUp/SettleUp.js","components/Groups/GroupDate.js","components/UI/Card.js","components/Groups/Group.js","components/Groups/Groups.js","components/Sidebar/SideBarItem.js","utils/backendAlertsController.js","store/auth-context.js","components/Sidebar/SideBarDialog.js","components/Sidebar/SideBarBtn.js","components/Sidebar/SideBar.js","components/AddNewGroup/AddNewGroupBtn.js","components/UI/FormModal.js","components/UI/ModalButton.js","components/AddNewGroup/NewGroupModalContent.js","components/NewGroupForm/GroupFormHeader.js","components/NewGroupForm/AddGroupMemberBtn.js","components/NewGroupForm/NewGroupBtnDanger.js","components/NewGroupForm/NewGroupBtnSuccess.js","components/NewGroupForm/NewGroupBtnSecondary.js","components/NewGroupForm/Card.js","components/NewGroupForm/Button.js","components/NewGroupForm/RemoveMemberErrorModal.js","components/NewGroupForm/RemoveMemberConfirmationModal.js","components/NewGroupForm/IndividualForm.js","components/NewGroupForm/IndividualForms.js","components/NewGroupForm/NewMemberModal.js","components/NewGroupForm/NewGroupBtnFormSubmission.js","components/NewGroupForm/NewGroupBtnFormCancellation.js","components/NewGroupForm/CreateGroupErrorModal.js","components/NewGroupForm/CreateGroupConfirmationModal.js","components/NewGroupForm/CancelSplittingConfirmationModal.js","components/NewGroupForm/NewGroupForm.js","components/Login/SignInForm.js","components/Login/SignUpForm.js","components/Login/Forms.js","components/Login/log.svg","components/Login/LeftPanel.js","components/Login/register.svg","components/Login/RightPanel.js","components/Login/Panels.js","components/Login/PasswordResetEmailFormModal.js","components/Login/Login.js","components/GroupDetail/Members/Member.js","components/GroupDetail/Members/Members.js","components/GroupDetail/Contacts/Contact.js","components/GroupDetail/Contacts/Contacts.js","components/GroupDetail/Logs/LogDate.js","components/GroupDetail/Logs/Log.js","components/GroupDetail/Logs/TableRow.js","components/GroupDetail/Logs/Logs.js","components/GroupDetail/SettleUp/SettleUpMessage.js","components/GroupDetail/SettleUp/ConfirmBtn.js","components/GroupDetail/SettleUp/ReminderModal.js","components/GroupDetail/SettleUp/IndebtedMember.js","components/GroupDetail/SettleUp/IndebtedMembers.js","components/GroupDetail/SettleUp/PaymentConfirmationModal.js","components/GroupDetail/SettleUp/BearedUpMember.js","components/GroupDetail/SettleUp/BearedUpMembers.js","components/GroupDetail/Layout/MainNavigation.js","components/GroupDetail/Layout/Layout.js","components/PasswordUpdateFormModal/ConfirmBtn.js","components/PasswordUpdateFormModal/PasswordUpdateFormModal.js","components/PasswordResetForm/PasswordResetForm.js","App.js","index.js"],"names":["module","exports","Header","GroupObj","User","DebtStatus","DebtMessage","DebtStatusClassName","Share","TotalAmountPaid","AmountReceived","IndebtedMembersTemp","BearedUpMembersTemp","initialStatus","GroupDate","props","d","Date","date","month","toLocaleString","day","year","getFullYear","className","Card","classes","children","Group","userDebtStatus","myShare","signedInUser","amountPaid","to","id","name","worth","Groups","groups","user","signedInUsers","filteredGroups","filter","group","value","console","log","members","obj","memberId","email","push","map","item","index","_id","SideBarItem","history","useHistory","onClick","iClassName","onSignOut","replace","onShowPasswordUpdateForm","class","style","color","fontSize","hideAlert","el","document","querySelector","parentElement","removeChild","showBackendAlert","type","msg","markup","insertAdjacentHTML","window","setTimeout","AuthContext","React","createContext","token","isLoggedIn","login","logout","AuthContextProvider","initialToken","Cookies","get","useState","setToken","contextValue","remove","Provider","SideBarDialog","authCtx","useContext","username","setUsername","SideBarBtn","toggleMenuHandler","SideBar","Fragment","navigation","toggle","classList","AddNewGroupBtn","onShow","FormModal","classNames","modal","backdrop","onHide","ModalButton","button","NewGroupModalContent","groupNameInputRef","useRef","totalAmountInputRef","groupNameInputIsValid","totalAmountInputIsValid","groupNameInputErrorMsg","totalAmountInputErrorMsg","groupObj","setGroupObj","createGroupVerification","groupName","groupWorth","a","jwt_decode","axios","method","url","data","headers","authorization","res","onInitialiseGroupId","response","message","formSubmissionHandler","event","preventDefault","groupNameInput","current","totalAmountInput","regEx","trim","length","match","includes","i","onSubmit","groupNameInputClasses","totalAmountInputClasses","inputStylesObj","position","border","padding","marginBottom","justifyContent","zIndex","input","width","maxWidth","fontWeight","ref","autoComplete","placeholder","min","GroupFormHeader","header","btnWrapper","onShowNewMemberModal","NewGroupBtnDanger","onRemoveMember","NewGroupBtnSuccess","btnDisabled","disabled","onAskForConfirmation","NewGroupBtnSecondary","onEdit","card","Button","RemoveMemberErrorModal","title","content","actions","RemoveMemberConfirmationModal","onHideRemoveMemberConfirmationModal","onConfirmRemoveMember","IndividualForm","clear","myContributionInputRef","currentlyPayingInputRef","setMemberId","myContributionInputIsValid","currentlyPayingInputIsValid","myContributionInputErrorMsg","currentlyPayingInputErrorMsg","memberObj","setMemberObj","confirmationState","setConfirmationState","showRemoveMemberErrorModal","setShowRemoveMemberErrorModal","showRemoveMemberConfirmationModal","setShowRemoveMemberConfirmationModal","registerConfirmation","numberOfConfirmedMembersHandler","totalMyContributionHandler","Number","totalCurrentlyPayingHandler","gmail","onAddGroupMemberObject","sendMemberConfirmationEmail","share","decoded","receiver","groupId","initialisedGroupId","status","askForConfirmationHandler","myContributionInput","currentlyPayingInput","MemberId","setInterval","result","isConfirmed","clearInterval","editHandler","onDeleteGroupMemberObject","removeMemberHandler","signedInEmail","myContributionInputClasses","currentlyPayingInputClasses","pendingMessage","confirmedMessage","ModalConfirmationMessage","wrapper","onRemoveGroupMember","form","IndividualForms","individualForms","DUMMY_MEMBERS","NewMemberModal","emailIdInputRef","emailIdInputIsValid","emailIdInputErrorMsg","emailIdObj","setEmailIdObj","isRegistered","emailId","emailIdInput","find","member","onAddNewMember","emailIdInputClasses","marginTop","marginLeft","htmlFor","NewGroupBtnFormSubmission","onCreateGroup","NewGroupBtnFormCancellation","CreateGroupErrorModal","HideCreateGroupErrorModal","CreateGroupConfirmationModal","onCancel","onConfirm","CancelSplittingConfirmationModal","message1","message2","NewGroupForm","setDUMMY_MEMBERS","New_Group_Members","setNew_Group_Members","showNewMemberModal","setShowNewMemberModal","showCreateGroupErrorModal","setShowCreateGroupErrorModal","showCreateGroupConfirmationModal","setShowCreateGroupConfirmationModal","numberOfConfirmedMembers","setNumberOfConfirmedMembers","totalMyContribution","setTotalMyContribution","totalCurrentlyPaying","setTotalCurrentlyPaying","confirmedMembersState","setConfirmedMembersState","totalMyContributionState","setTotalMyContributionState","totalCurrentlyPayingState","setTotalCurrentlyPayingState","showCancelSplittingConfirmationModal","setShowCancelSplittingConfirmationModal","hideNewMemberModalHandler","confirmCreateGroupHandler","confirmCancellingSplittingHandler","isGroupFormInputsValid","createGroupModalErrorMessage","container","Dummy_Users","newMember","prevValue","AddGroupMemberBtn","val","MEMBERS","prevMembers","ob","SignInForm","useCookies","setCookie","emailInputRef","passwordInputRef","loginUser","password","expires","setTime","getTime","cookieOptions","path","location","reload","action","emailInput","passwordInput","onShowPasswordResetEmailFormModal","textDecoration","add","SignUpForm","nameInputRef","usernameInputRef","mobileNoInputRef","passwordConfirmInputRef","createUser","contactNo","passwordConfirm","nameInput","usernameInput","mobileNoInput","passwordConfirmInput","Forms","LeftPanel","src","alt","RightPanel","switchToSignInFormHandler","register","Panels","PasswordResetEmailFormModal","sendPasswordResetEmail","Login","showPasswordResetEmailFormModal","setShowPasswordResetEmailFormModal","Member","debtStyle","totalAmountPaid","amountReceived","Members","signedInMember","useParams","setUser","fetchGroupFromServer","useCallback","fetchUserFromServer","useEffect","MembersExceptSignedInMember","filteredMembers","Contact","Contacts","users","setUsers","fetchUsersFromServer","LogDate","Log","logText","TableRow","Logs","groupCreationLog","tableRows","logsAfterGroupCreation","logs","logItem","SettleUpMessage","setMessage","setStatus","debtMessage","debtStatusClassName","height","borderRadius","ReminderModal","amountRemindedInputRef","amountRemindedInputIsValid","amountRemindedInputErrorMsg","amountRemindedInputObj","setAmountRemindedInputObj","sendPaymentReminderEmail","sender","amount","pushLogToGroupDocument","reminderMessage","amountRemindedInputClasses","amountRemindedInput","groupMemberObj","ConfirmBtn","IndebtedMember","showReminderModal","setShowReminderModal","onAddGroupLog","IndebtedMembers","indebtedMembers","setIndebtedMembers","PaymentConfirmationModal","amountToBeConfirmedInputRef","meansOfPaymentInputRef","proofOfPaymentInputRef","amountToBeConfirmedInputIsValid","amountToBeConfirmedInputErrorMsg","meansOfPaymentInputIsValid","meansOfPaymentInputErrorMsg","proofOfPaymentInputIsValid","paymentToBeConfirmedInputObj","setPaymentToBeConfirmedInputObj","sendPaymentConfirmationEmail","means","fileData","FormData","append","amountToBeConfirmedInputClasses","labelStylesObj","icon","amountToBeConfirmedInput","meansOfPaymentInput","proofOfPaymentInput","proofOfPaymentInputErrorMsg","target","files","BearedUpMember","showPaymentConfirmationModal","setShowPaymentConfirmationModal","BearedUpMembers","bearedUpMembers","SettleUp","debtStatus","setDebtStatus","setDebtMessage","setDebtStatusClassName","setShare","setTotalAmountPaid","setAmountReceived","setBearedUpMembers","setPropertiesAndValues","STATUS","MainNavigation","logo","fontStyle","nav","activeClassName","active","exact","Layout","Original_Dummy_Groups","main","PasswordUpdateFormModal","currentPasswordInputRef","newPasswordInputRef","confirmNewPasswordInputRef","updateMyPassword","currentPassword","newPassword","confirmNewPassword","passwordCurrent","PasswordResetForm","resetPassword","pageCoverGrey","App","Dummy_Groups","setDummy_Groups","setInitialisedGroupId","showPasswordUpdateFormModal","setShowPasswordUpdateFormModal","fetchMyGroupsFromServer","myGroups","showGroupFormModal","setShowGroupFormModal","setGroupNameInput","setTotalAmountInput","useLocation","pathname","showGroupFormModalHandler","startsWith","pageCoverViolet","groupNameInputTemp","totalAmountInputTemp","pageCoverYellow","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.23628251.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__2VnmL\",\"logo\":\"MainNavigation_logo__Bjm7I\",\"nav\":\"MainNavigation_nav__3Vh6f\",\"active\":\"MainNavigation_active__e60_m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageCoverGrey\":\"PasswordResetForm_pageCoverGrey__3ujzA\",\"ForgotPassword\":\"PasswordResetForm_ForgotPassword__3WrJQ\",\"form-container\":\"PasswordResetForm_form-container__2IVky\",\"form-wrap\":\"PasswordResetForm_form-wrap__5tyYn\",\"form-box\":\"PasswordResetForm_form-box__ErEQ8\",\"form-submit\":\"PasswordResetForm_form-submit__2OZI-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"IndividualForm_wrapper__2WtLM\",\"title\":\"IndividualForm_title__3yTeN\",\"form\":\"IndividualForm_form__2d1g-\",\"inputfield\":\"IndividualForm_inputfield__2GWMv\",\"input\":\"IndividualForm_input__2TSuK\",\"textarea\":\"IndividualForm_textarea__2E8YL\",\"custom_select\":\"IndividualForm_custom_select__33TA5\",\"check\":\"IndividualForm_check__2p7ea\",\"checkmark\":\"IndividualForm_checkmark__j1UfW\",\"btn\":\"IndividualForm_btn__1WTxG\",\"confirmation\":\"IndividualForm_confirmation__1wQZk\",\"remove\":\"IndividualForm_remove__3t1L1\",\"terms\":\"IndividualForm_terms__2XNjj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"RemoveMemberErrorModal_backdrop__2iVGp\",\"modal\":\"RemoveMemberErrorModal_modal__1tHcI\",\"header\":\"RemoveMemberErrorModal_header__uR7jf\",\"content\":\"RemoveMemberErrorModal_content__1hAJL\",\"actions\":\"RemoveMemberErrorModal_actions__2uFn4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"RemoveMemberConfirmationModal_backdrop__1478I\",\"modal\":\"RemoveMemberConfirmationModal_modal__b_ta5\",\"header\":\"RemoveMemberConfirmationModal_header__213qT\",\"content\":\"RemoveMemberConfirmationModal_content__2J4Ae\",\"actions\":\"RemoveMemberConfirmationModal_actions__1BxPt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"CreateGroupErrorModal_backdrop__1ZpHO\",\"modal\":\"CreateGroupErrorModal_modal__10pHN\",\"header\":\"CreateGroupErrorModal_header__t44Ou\",\"content\":\"CreateGroupErrorModal_content__1T6ZJ\",\"actions\":\"CreateGroupErrorModal_actions__2InLL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"CreateGroupConfirmationModal_backdrop__3aA9C\",\"modal\":\"CreateGroupConfirmationModal_modal__16jlZ\",\"header\":\"CreateGroupConfirmationModal_header__2jj-Y\",\"content\":\"CreateGroupConfirmationModal_content__33bqJ\",\"actions\":\"CreateGroupConfirmationModal_actions__3PfOB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"CancelSplittingConfirmationModal_backdrop__11Dnn\",\"modal\":\"CancelSplittingConfirmationModal_modal__1aIQ7\",\"header\":\"CancelSplittingConfirmationModal_header__3E6XY\",\"content\":\"CancelSplittingConfirmationModal_content__17aVR\",\"actions\":\"CancelSplittingConfirmationModal_actions__2v1VU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"FormModal_backdrop__2lV6u\",\"modal\":\"FormModal_modal__2RPCt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageCoverYellow\":\"Background_pageCoverYellow__XMuIF\",\"pageCoverViolet\":\"Background_pageCoverViolet__2tXcz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"NewGroupModalContent_input__2aRoy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ModalButton_button__3mfNx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnWrapper\":\"CloseBtn_btnWrapper__1OVzU\",\"button\":\"CloseBtn_button__OcIEe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"NewGroupForm_wrapper__1PQ7x\",\"title\":\"NewGroupForm_title__1Trrg\",\"form\":\"NewGroupForm_form__1RT5A\",\"inputfield\":\"NewGroupForm_inputfield__3ICu3\",\"input\":\"NewGroupForm_input__zBRuS\",\"textarea\":\"NewGroupForm_textarea__2iXMo\",\"custom_select\":\"NewGroupForm_custom_select__ANqNt\",\"check\":\"NewGroupForm_check__1xfH9\",\"checkmark\":\"NewGroupForm_checkmark__3kKE4\",\"btn\":\"NewGroupForm_btn__2trZ-\",\"terms\":\"NewGroupForm_terms__2XW5X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"GroupFormHeader_header__1QGXD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnWrapper\":\"AddGroupMemberBtn_btnWrapper__2uTUi\",\"alternative\":\"AddGroupMemberBtn_alternative__2LucQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnWrapper\":\"NewGroupBtnDanger_btnWrapper__32Go7\",\"alternative\":\"NewGroupBtnDanger_alternative__17Mc6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnWrapper\":\"NewGroupBtnSuccess_btnWrapper__3LW0_\",\"alternative\":\"NewGroupBtnSuccess_alternative__2kNKq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnWrapper\":\"NewGroupBtnSecondary_btnWrapper__1B9L3\",\"alternative\":\"NewGroupBtnSecondary_alternative__28gJI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__8KR7i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__21NAu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"NewMemberModal_input__3NprF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnWrapper\":\"CloseBtn_btnWrapper__2-EH0\",\"button\":\"CloseBtn_button__3T3AX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnWrapper\":\"NewGroupBtnFormSubmission_btnWrapper__1H6uW\",\"alternative\":\"NewGroupBtnFormSubmission_alternative__3RQ7k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnWrapper\":\"NewGroupBtnFormCancellation_btnWrapper__1MNWT\",\"alternative\":\"NewGroupBtnFormCancellation_alternative__xxO8F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"PasswordResetEmailFormModal_input__14j8t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"ReminderModal_input__3u4RQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnWrapper\":\"CloseBtn_btnWrapper__aDbXV\",\"button\":\"CloseBtn_button__pq6uy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnWrapper\":\"ConfirmBtn_btnWrapper__3vHa3\",\"button\":\"ConfirmBtn_button__1tDS-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"PaymentConfirmationModal_input__1GYaw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__PR7q_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"PasswordUpdateFormModal_input__1l28Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnWrapper\":\"ConfirmBtn_btnWrapper__2ZX82\",\"button\":\"ConfirmBtn_button__2vF8O\"};","import './Header.css';\r\nfunction Header() {\r\n  return (\r\n    <div>\r\n      <h1>Group Expense Manager</h1>\r\n      <h2>GROUPS</h2>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import Cookies from \"js-cookie\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport axios from \"axios\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport SettleUpMessage from \"./SettleUpMessage\";\r\nimport IndebtedMembers from \"./IndebtedMembers\";\r\nimport BearedUpMembers from \"./BearedUpMembers\";\r\nimport IndebtedMember from \"./IndebtedMember\";\r\nimport BearedUpMember from \"./BearedUpMember\";\r\nimport { useState, useEffect, useCallback } from \"react\";\r\nimport { showBackendAlert } from \"./../../../utils/backendAlertsController\";\r\nlet GroupObj;\r\nlet User;\r\nlet DebtStatus;\r\nlet DebtMessage;\r\nlet DebtStatusClassName;\r\nlet Share;\r\nlet TotalAmountPaid;\r\nlet AmountReceived;\r\nlet IndebtedMembersTemp;\r\nlet BearedUpMembersTemp;\r\nlet initialStatus;\r\nconst SettleUp = function (props) {\r\n  //alert(debtStatus);\r\n  const params = useParams();\r\n  const groupId = params.groupId;\r\n  const [groupObj, setGroupObj] = useState(null);\r\n  const [user, setUser] = useState(null);\r\n  const [debtStatus, setDebtStatus] = useState(\"\");\r\n  const [debtMessage, setDebtMessage] = useState(\"\");\r\n  const [debtStatusClassName, setDebtStatusClassName] = useState(\"\");\r\n  const [share, setShare] = useState(null);\r\n  const [totalAmountPaid, setTotalAmountPaid] = useState(null);\r\n  const [amountReceived, setAmountReceived] = useState(null);\r\n  const [indebtedMembers, setIndebtedMembers] = useState([]);\r\n  const [bearedUpMembers, setBearedUpMembers] = useState([]);\r\n  let signedInMember;\r\n  const fetchGroupFromServer = useCallback(async () => {\r\n    const token = Cookies.get(\"jwt\");\r\n    if (token) {\r\n      let decoded = jwt_decode(token);\r\n      //console.log(decoded);\r\n      try {\r\n        const res = await axios({\r\n          method: \"GET\",\r\n          url: `https://group-expense-manager-api.herokuapp.com/api/v1/groups/${groupId}`,\r\n          headers: {\r\n            authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n\r\n        if (res.data.status === \"success\") {\r\n          // alert(\"hello\");\r\n          //setGroupObj(res.data.data.group);\r\n          GroupObj = res.data.data.group;\r\n          console.log(res.data.data.group);\r\n        }\r\n      } catch (err) {\r\n        showBackendAlert(\"error\", err.response.data.message);\r\n      }\r\n    } else {\r\n      showBackendAlert(\"error\", \"You are not logged in to access the group!\");\r\n    }\r\n  }, []);\r\n  const fetchUserFromServer = useCallback(async () => {\r\n    const token = Cookies.get(\"jwt\");\r\n    if (token) {\r\n      let decoded = jwt_decode(token);\r\n      //console.log(decoded);\r\n      try {\r\n        const res = await axios({\r\n          method: \"GET\",\r\n          url: `https://group-expense-manager-api.herokuapp.com/api/v1/users/${decoded.id}`,\r\n          headers: {\r\n            authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n\r\n        if (res.data.status === \"success\") {\r\n          User = res.data.data.user;\r\n          signedInMember = GroupObj.members.find(\r\n            (ob) => ob.memberId === User.email\r\n          );\r\n          let totalAmountPaid = signedInMember.totalAmountPaid;\r\n          let amountReceived = signedInMember.amountReceived;\r\n          let share = signedInMember.myShare;\r\n          TotalAmountPaid = signedInMember.totalAmountPaid;\r\n          AmountReceived = signedInMember.amountReceived;\r\n          Share = signedInMember.myShare;\r\n          if (totalAmountPaid - amountReceived > share) {\r\n            initialStatus = \"owed\";\r\n          } else if (totalAmountPaid - amountReceived === share) {\r\n            initialStatus = \"settled\";\r\n          } else {\r\n            initialStatus = \"owe\";\r\n          }\r\n          //setUser(res.data.data.user);\r\n        }\r\n      } catch (err) {\r\n        showBackendAlert(\"error\", err.response.data.message);\r\n      }\r\n    } else {\r\n      showBackendAlert(\"error\", \"You are not logged in to access the group!\");\r\n    }\r\n  }, []);\r\n  const setPropertiesAndValues = useCallback(async () => {\r\n    //alert(\"saaaaaaaaaala\");\r\n    let STATUS;\r\n    if (totalAmountPaid === null) {\r\n      STATUS = initialStatus;\r\n    } else {\r\n      if (totalAmountPaid - amountReceived > share) {\r\n        STATUS = \"owed\";\r\n      } else if (totalAmountPaid - amountReceived === share) {\r\n        STATUS = \"settled\";\r\n      } else {\r\n        STATUS = \"owe\";\r\n      }\r\n    }\r\n    if (STATUS === \"owed\") {\r\n      DebtStatus = \"owed\";\r\n      //setDebtStatus(\"owed\");\r\n      /*setDebtMessage(\r\n        `You are owed Rs ${\r\n          totalAmountPaid - amountReceived - share\r\n        } from the group.You can set reminder to few of the members of this group by clicking on the following members.`\r\n      );*/\r\n      DebtMessage = `You are owed Rs ${\r\n        TotalAmountPaid - AmountReceived - Share\r\n      } from the group.You can set reminder to few of the members of this group by clicking on the following members.`;\r\n      //setDebtStatusClassName(\"status-pending\");\r\n      //alert(GroupObj.name);\r\n      DebtStatusClassName = \"status-pending\";\r\n      const indebtedMembers = GroupObj.members\r\n        .filter((ob) => ob.totalAmountPaid - ob.amountReceived < ob.myShare)\r\n        .map((ob) => (\r\n          <IndebtedMember\r\n            key={ob._id}\r\n            groupMemberObj={ob}\r\n            onAddGroupLog={props.onAddGroupLog}\r\n            signedInMember={signedInMember}\r\n            groupName={GroupObj.groupName}\r\n          />\r\n        ));\r\n      //setIndebtedMembers(indebtedMembers);\r\n      IndebtedMembersTemp = indebtedMembers;\r\n    } else if (STATUS === \"settled\") {\r\n      DebtStatus = \"settled\";\r\n      //setDebtStatus(\"settled\");\r\n      DebtMessage = \"Your payment is all settled up!\";\r\n      //setDebtMessage(\"Your payment is all settled up!\");\r\n      // setDebtStatusClassName(\"status-paid\");\r\n      DebtStatusClassName = \"status-paid\";\r\n    } else {\r\n      //setDebtStatus(\"owe\");\r\n      DebtStatus = \"owe\";\r\n      /*setDebtMessage(\r\n        `You owe Rs ${\r\n          share - (totalAmountPaid - amountReceived)\r\n        } to the group.You can clear your debt by clicking on some of the following members for Pay through Email Confirmation!`\r\n      );*/\r\n      DebtMessage = `You owe Rs ${\r\n        Share - (TotalAmountPaid - AmountReceived)\r\n      } to the group.If you have paid some amount to member(s) of the group and still not have your information about the payment updated in the application, click on some of the following members to send email about confirming the payment!`;\r\n      //setDebtStatusClassName(\"status-unpaid\");\r\n      DebtStatusClassName = \"status-unpaid\";\r\n      console.log(groupObj);\r\n      //alert(\"hello3\");\r\n      const bearedUpMembers = GroupObj.members\r\n        .filter((ob) => ob.totalAmountPaid - ob.amountReceived > ob.myShare)\r\n        .map((ob) => (\r\n          <BearedUpMember\r\n            key={ob._id}\r\n            groupMemberObj={ob}\r\n            signedInMember={signedInMember}\r\n            onAddGroupLog={props.onAddGroupLog}\r\n            groupName={GroupObj.groupName}\r\n          />\r\n        ));\r\n      //setBearedUpMembers(bearedUpMembers);\r\n      BearedUpMembersTemp = bearedUpMembers;\r\n    }\r\n  }, []);\r\n  useEffect(async () => {\r\n    await fetchGroupFromServer();\r\n    await fetchUserFromServer();\r\n    setGroupObj(GroupObj);\r\n    setUser(User);\r\n    if (GroupObj && User) setPropertiesAndValues();\r\n    setDebtStatus(DebtStatus);\r\n    setDebtStatusClassName(DebtStatusClassName);\r\n    setDebtMessage(DebtMessage);\r\n    if (user && groupObj) {\r\n      signedInMember = groupObj.members.find(\r\n        (el) => el.memberId === user.email\r\n      );\r\n      setShare(signedInMember.myShare);\r\n      setTotalAmountPaid(signedInMember.totalAmountPaid);\r\n      setAmountReceived(signedInMember.amountReceived);\r\n    }\r\n    setIndebtedMembers(IndebtedMembersTemp);\r\n    setBearedUpMembers(BearedUpMembersTemp);\r\n  }, [fetchUserFromServer, fetchGroupFromServer, setPropertiesAndValues]);\r\n\r\n\r\n  return (\r\n    <div>\r\n      <SettleUpMessage\r\n        debtMessage={debtMessage}\r\n        debtStatusClassName={debtStatusClassName}\r\n      />\r\n      {debtStatus === \"owed\" && (\r\n        <IndebtedMembers\r\n          indebtedMembers={indebtedMembers}\r\n          onAddGroupLog={props.onAddGroupLog}\r\n        />\r\n      )}\r\n      {debtStatus === \"owe\" && (\r\n        <BearedUpMembers bearedUpMembers={bearedUpMembers} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default SettleUp;\r\n","import React from \"react\";\r\n\r\nimport \"./GroupDate.css\";\r\n\r\nconst GroupDate = (props) => {\r\n  let d = new Date(props.date);\r\n  const month = d.toLocaleString(\"en-US\", { month: \"long\" });\r\n  const day = d.toLocaleString(\"en-US\", { day: \"2-digit\" });\r\n  const year = d.getFullYear();\r\n\r\n  return (\r\n    <div className=\"group-date\">\r\n      <div className=\"group-date__month\">{month}</div>\r\n      <div className=\"group-date__year\">{year}</div>\r\n      <div className=\"group-date__day\">{day}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GroupDate;\r\n","import React from \"react\";\r\n\r\nimport \"./Card.css\";\r\n\r\nconst Card = (props) => {\r\n  const classes = \"card \" + props.className;\r\n\r\n  return <div className={classes}>{props.children}</div>;\r\n};\r\n\r\nexport default Card;\r\n","import { Link } from \"react-router-dom\";\r\nimport React from \"react\";\r\n\r\nimport GroupDate from \"./GroupDate\";\r\nimport Card from \"../UI/Card\";\r\nimport \"./Group.css\";\r\n\r\nconst Group = (props) => {\r\n  const myShare = props.signedInUser.myShare;\r\n  const amountPaid = props.signedInUser.amountPaid;\r\n  let userDebtStatus;\r\n  if (myShare > amountPaid) {\r\n    userDebtStatus = `You owe Rs ${myShare - amountPaid}`;\r\n  } else if (myShare === amountPaid) {\r\n    userDebtStatus = `Your amount is settled up`;\r\n  } else {\r\n    userDebtStatus = `You are owed Rs ${amountPaid - myShare}`;\r\n  }\r\n  return (\r\n    <li>\r\n      <Link to={`/groups/${props.id}`}>\r\n        <Card className=\"group\">\r\n          <GroupDate date={props.date} />\r\n          <div className=\"group__description\">\r\n            <h2>{`${props.name} (Total transaction amounting to Rs ${props.worth})`}</h2>\r\n            <div className=\"group__price\">{userDebtStatus}</div>\r\n          </div>\r\n        </Card>\r\n      </Link>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Group;\r\n","import React, { useState } from \"react\";\r\n\r\nimport Group from \"./Group\";\r\nimport Card from \"../UI/Card\";\r\nimport \"./Groups.css\";\r\n\r\nconst Groups = (props) => {\r\n  let groups = [];\r\n  if (props.user != null) {\r\n    let signedInUsers = [];\r\n    const filteredGroups = props.groups.filter((group) => {\r\n      let value = false;\r\n      console.log(group);\r\n      for (const obj of group.members) {\r\n        if (obj.memberId === props.user.email) {\r\n          value = true;\r\n          signedInUsers.push(obj);\r\n          break;\r\n        }\r\n      }\r\n      return value;\r\n    });\r\n    console.log(filteredGroups);\r\n    groups = filteredGroups.map((item, index) => (\r\n      <Group\r\n        key={item._id}\r\n        id={item._id}\r\n        name={item.name}\r\n        date={item.date}\r\n        worth={item.worth}\r\n        signedInUser={signedInUsers[index]}\r\n      />\r\n    ));\r\n    //setGroups(groupsTemp);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Card className=\"groups\">{groups}</Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Groups;\r\n","import \"./SideBar.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst SideBarItem = function (props) {\r\n  const history = useHistory();\r\n  const clickHandler = function () {\r\n    if (props.iClassName === \"fa fa-sign-out\") {\r\n      props.onSignOut();\r\n      history.replace(\"/login\");\r\n    } else if (props.iClassName === \"fa fa-lock\") {\r\n      props.onShowPasswordUpdateForm();\r\n    }\r\n  };\r\n  return (\r\n    <li onClick={clickHandler}>\r\n      <a>\r\n        <span class=\"icon\">\r\n          <i className={props.iClassName} aria-hidden=\"true\"></i>\r\n        </span>\r\n        <span class=\"title\" style={{ color: \"#fff\", fontSize: \"130%\" }}>\r\n          {props.name}\r\n        </span>\r\n      </a>\r\n    </li>\r\n  );\r\n};\r\nexport default SideBarItem;\r\n","const hideAlert = () => {\r\n  const el = document.querySelector(\".alert\");\r\n  if (el) el.parentElement.removeChild(el);\r\n};\r\nexport const showBackendAlert = (type, msg) => {\r\n  hideAlert();\r\n  let color;\r\n  if (type === \"error\") color = \"#a64452\";\r\n  else color = \"#4bb543\";\r\n  const markup = `<div class=\"alert alert--${type}\" style=\"display:block;margin:auto;text-align:center;font-size:24px;background-color:${color};width:50%\">${msg}</div>`;\r\n  document.querySelector(\"body\").insertAdjacentHTML(\"afterbegin\", markup);\r\n  window.setTimeout(hideAlert, 5000);\r\n};\r\n","import { useHistory } from \"react-router-dom\";\r\nimport React, { useState } from \"react\";\r\nimport Cookies from \"js-cookie\";\r\nimport { showBackendAlert } from \"../utils/backendAlertsController\";\r\n\r\nconst AuthContext = React.createContext({\r\n  token: \"\",\r\n  isLoggedIn: false,\r\n  login: (token) => {},\r\n  logout: () => {},\r\n});\r\n\r\nexport const AuthContextProvider = (props) => {\r\n  const history = useHistory(\"/\");\r\n  const initialToken = Cookies.get(\"jwt\");\r\n  const [token, setToken] = useState(initialToken);\r\n\r\n  const userIsLoggedIn = !!token;\r\n\r\n  const loginHandler = (token) => {\r\n    setToken(token);\r\n  };\r\n\r\n  const logoutHandler = () => {\r\n    setToken(null);\r\n    Cookies.remove(\"jwt\");\r\n    showBackendAlert(\"success\", \"Logged out successfully!\");\r\n  };\r\n\r\n  const contextValue = {\r\n    token: token,\r\n    isLoggedIn: userIsLoggedIn,\r\n    login: loginHandler,\r\n    logout: logoutHandler,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={contextValue}>\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthContext;\r\n","import SideBarItem from \"./SideBarItem\";\r\nimport AuthContext from \"./../../store/auth-context\";\r\nimport { useContext, useState } from \"react\";\r\nimport \"./SideBar.css\";\r\n\r\nconst SideBarDialog = function (props) {\r\n  const authCtx = useContext(AuthContext);\r\n  const [username, setUsername] = useState(\"Username\");\r\n  //alert(\"dimagkharab\");\r\n  if (props.user && username === \"Username\") {\r\n    setUsername(props.user.username);\r\n  }\r\n  return (\r\n    <div class=\"navigation\">\r\n      <ul>\r\n        <SideBarItem iClassName=\"fa fa-user\" name={`${username}`} />\r\n        <SideBarItem\r\n          iClassName=\"fa fa-lock\"\r\n          name=\"Reset Password\"\r\n          onShowPasswordUpdateForm={props.onShowPasswordUpdateForm}\r\n        />\r\n        <SideBarItem\r\n          iClassName=\"fa fa-sign-out\"\r\n          name=\"Sign Out\"\r\n          onSignOut={authCtx.logout}\r\n        />\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SideBarDialog;\r\n","import \"./SideBar.css\";\r\n\r\nconst SideBarBtn = function (props) {\r\n  return <div className=\"toggle\" onClick={props.toggleMenuHandler}></div>;\r\n};\r\n\r\nexport default SideBarBtn;\r\n","import React from \"react\";\r\nimport \"./SideBar.css\";\r\nimport SideBarDialog from \"./SideBarDialog\";\r\nimport SideBarBtn from \"./SideBarBtn\";\r\nconst SideBar = function (props) {\r\n  const toggleMenuHandler = function () {\r\n    let navigation = document.querySelector(\".navigation\");\r\n    let toggle = document.querySelector(\".toggle\");\r\n    navigation.classList.toggle(\"active\");\r\n    toggle.classList.toggle(\"active\");\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <SideBarDialog\r\n        user={props.user}\r\n        onShowPasswordUpdateForm={props.onShowPasswordUpdateForm}\r\n      />\r\n      <SideBarBtn toggleMenuHandler={toggleMenuHandler} />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default SideBar;\r\n","import \"./AddNewGroupBtn.css\";\r\n\r\nconst AddNewGroupBtn = function (props) {\r\n  return (\r\n    <div className=\"new-group\">\r\n      <button onClick={props.onShow}>Add New Group</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddNewGroupBtn;\r\n","import React from \"react\";\r\nimport Card from \"./Card\";\r\nimport classes from \"./FormModal.module.css\";\r\n\r\nconst FormModal = (props) => {\r\n  const classNames = `${classes.modal} ${props.className}`;\r\n  return (\r\n    <div>\r\n      <div className={classes.backdrop} onClick={props.onHide}/>\r\n      <Card className={classNames} style={props.style}>{props.children}</Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormModal;\r\n","import React from \"react\";\r\n\r\nimport classes from \"./ModalButton.module.css\";\r\n\r\nconst ModalButton = (props) => {\r\n  return (\r\n    <button className={classes.button} type={props.type || \"button\"}>\r\n      {props.children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default ModalButton;\r\n","import Cookies from \"js-cookie\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport axios from \"axios\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useRef, useState } from \"react\";\r\nimport FormModal from \"../UI/FormModal\";\r\nimport classes from \"./NewGroupModalContent.module.css\";\r\nimport ModalBtn from \"../UI/ModalButton\";\r\nimport CloseBtn from \"./CloseBtn.js\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { showBackendAlert } from \"./../../utils/backendAlertsController\";\r\n\r\nconst NewGroupModalContent = function (props) {\r\n  const history = useHistory();\r\n  const groupNameInputRef = useRef();\r\n  const totalAmountInputRef = useRef();\r\n  const [groupObj, setGroupObj] = useState({\r\n    groupNameInputIsValid: true,\r\n    totalAmountInputIsValid: true,\r\n    groupNameInputErrorMsg: \"\",\r\n    totalAmountInputErrorMsg: \"\",\r\n  });\r\n\r\n  const createGroupVerification = async (groupName, groupWorth) => {\r\n    const token = Cookies.get(\"jwt\");\r\n    if (token) {\r\n      let decoded = jwt_decode(token);\r\n      //console.log(decoded);\r\n      try {\r\n        const res = await axios({\r\n          method: \"POST\",\r\n          url: `https://group-expense-manager-api.herokuapp.com/api/v1/groups/createGroupVerification`,\r\n          data: {\r\n            groupName,\r\n            groupWorth,\r\n          },\r\n          headers: {\r\n            authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n        props.onInitialiseGroupId(res.data.data._id);\r\n      } catch (err) {\r\n        showBackendAlert(\"error\", err.response.data.message);\r\n      }\r\n    } else {\r\n      showBackendAlert(\"error\", \"You are not logged in!\");\r\n    }\r\n  };\r\n  const formSubmissionHandler = async (event) => {\r\n    event.preventDefault();\r\n    let groupNameInput = groupNameInputRef.current.value;\r\n    let totalAmountInput = totalAmountInputRef.current.value;\r\n    let groupNameInputIsValid = true,\r\n      totalAmountInputIsValid = true,\r\n      groupNameInputErrorMsg = \"\",\r\n      totalAmountInputErrorMsg = \"\";\r\n    const regEx = /^[0-9a-zA-Z]+$/;\r\n    if (groupNameInput.trim() == \"\") {\r\n      groupNameInputIsValid = false;\r\n      groupNameInputErrorMsg = (\r\n        <p className=\"error-text\">Please enter a non-empty group name!</p>\r\n      );\r\n    } else if (groupNameInput.trim().length > 30) {\r\n      groupNameInputIsValid = false;\r\n      groupNameInputErrorMsg = (\r\n        <p className=\"error-text\">\r\n          The length of the group name should not exceed 30!\r\n        </p>\r\n      );\r\n    } else if (\r\n      !groupNameInput.trim().match(regEx) &&\r\n      !groupNameInput.trim().includes(\" \")\r\n    ) {\r\n      groupNameInputIsValid = false;\r\n      groupNameInputErrorMsg = (\r\n        <p className=\"error-text\">The group name should be alphanumeric!</p>\r\n      );\r\n    }\r\n    if (totalAmountInput.trim() == \"\") {\r\n      totalAmountInputIsValid = false;\r\n      totalAmountInputErrorMsg = (\r\n        <p className=\"error-text\">Please enter amount field!</p>\r\n      );\r\n    } else if (totalAmountInput.includes(\".\")) {\r\n      totalAmountInputIsValid = false;\r\n      totalAmountInputErrorMsg = (\r\n        <p className=\"error-text\">Please enter amount with no decimals!</p>\r\n      );\r\n    }\r\n\r\n    if (!groupNameInputIsValid || !totalAmountInputIsValid) {\r\n      setGroupObj({\r\n        groupNameInputIsValid,\r\n        totalAmountInputIsValid,\r\n        groupNameInputErrorMsg,\r\n        totalAmountInputErrorMsg,\r\n      });\r\n    } else {\r\n      setGroupObj({\r\n        groupNameInputIsValid,\r\n        totalAmountInputIsValid,\r\n        groupNameInputErrorMsg,\r\n        totalAmountInputErrorMsg,\r\n      });\r\n      for (let i = 0; i <= 100000000; i++) {}\r\n      //console.log(groupObj);\r\n      groupNameInputRef.current.value = \"\";\r\n      totalAmountInputRef.current.value = \"\";\r\n      try {\r\n        await createGroupVerification(groupNameInput, totalAmountInput);\r\n        history.push(\"/create-new-group\");\r\n        props.onSubmit(groupNameInput, totalAmountInput);\r\n      } catch (err) {\r\n        showBackendAlert(\r\n          \"error\",\r\n          \"There was an error initialising the group formation!\"\r\n        );\r\n      }\r\n      props.onHide();\r\n    }\r\n  };\r\n  const groupNameInputClasses = !groupObj.groupNameInputIsValid\r\n    ? \"form-control invalid\"\r\n    : \"form-control\";\r\n\r\n  const totalAmountInputClasses = !groupObj.totalAmountInputIsValid\r\n    ? \"form-control invalid\"\r\n    : \"form-control\";\r\n  const formStylesObj = {\r\n    width: \"90%\",\r\n    color: \"black\",\r\n    maxWidth: \"40rem\",\r\n    fontWeight: \"bold\",\r\n  };\r\n  const labelStylesObj = {\r\n    position: \"absolute\",\r\n    fontSize: \"80%\",\r\n    fontWeight: \"bold\",\r\n    marginTop: \"0.2rem\",\r\n    marginLeft: \"-25%\",\r\n    marginBottom: \"0.7rem\",\r\n  };\r\n  const inputStylesObj = {\r\n    position: \"relative\",\r\n    border: \"1px solid black\",\r\n    padding: \"0.15rem\",\r\n    marginBottom: \"0.9rem\",\r\n    justifyContent: \"left\",\r\n    zIndex: 10,\r\n  };\r\n  return (\r\n    <FormModal className={classes.input} onHide={props.onHide}>\r\n      <form onSubmit={formSubmissionHandler} style={formStylesObj}>\r\n        <div className={groupNameInputClasses}>\r\n          <input\r\n            ref={groupNameInputRef}\r\n            id=\"groupname\"\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            style={inputStylesObj}\r\n            placeholder=\"Group Name\"\r\n          />\r\n          {!groupObj.groupNameInputIsValid && groupObj.groupNameInputErrorMsg}\r\n        </div>\r\n        <div className={totalAmountInputClasses}>\r\n          <input\r\n            ref={totalAmountInputRef}\r\n            id=\"amount\"\r\n            type=\"number\"\r\n            min=\"0\"\r\n            autoComplete=\"off\"\r\n            style={inputStylesObj}\r\n            placeholder=\"Total Amount (Rs)\"\r\n          />\r\n          {!groupObj.groupNameInputIsValid && groupObj.groupNameInputErrorMsg}\r\n          {!groupObj.totalAmountInputIsValid &&\r\n            groupObj.totalAmountInputErrorMsg}\r\n        </div>\r\n        <ModalBtn type=\"submit\">Split Bill</ModalBtn>\r\n      </form>\r\n    </FormModal>\r\n  );\r\n};\r\n\r\nexport default NewGroupModalContent;\r\n","import classes from \"./GroupFormHeader.module.css\";\r\nconst GroupFormHeader = function (props) {\r\n  return (\r\n    <h1 className={classes.header}>\r\n      {`${props.groupNameInput} (Rs.${props.totalAmountInput} to be split)`}\r\n    </h1>\r\n  );\r\n};\r\nexport default GroupFormHeader;\r\n","import classes from \"./AddGroupMemberBtn.module.css\";\r\n\r\nconst AddNewGroupBtn = function (props) {\r\n  return (\r\n    <div className={classes.btnWrapper}>\r\n      <button onClick={props.onShowNewMemberModal}>Add New Member</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddNewGroupBtn;\r\n","import classes from \"./NewGroupBtnDanger.module.css\";\r\n\r\nconst NewGroupBtnDanger = function (props) {\r\n  return (\r\n    <div className={classes.btnWrapper}>\r\n      <button onClick={props.onRemoveMember}>{props.children}</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewGroupBtnDanger;\r\n","import classes from \"./NewGroupBtnSuccess.module.css\";\r\n\r\nconst NewGroupBtnSuccess = function (props) {\r\n  const btnDisabled=props.disabled==\"disabled\"?true:false;\r\n  return (\r\n    <div className={classes.btnWrapper}>\r\n      <button onClick={props.onAskForConfirmation} disabled={btnDisabled}>{props.children}</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewGroupBtnSuccess;\r\n","import classes from \"./NewGroupBtnSecondary.module.css\";\r\n\r\nconst NewGroupBtnSecondary = function (props) {\r\n  return (\r\n    <div className={classes.btnWrapper}>\r\n      <button onClick={props.onEdit}>{props.children}</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewGroupBtnSecondary;\r\n","import React from 'react';\r\n\r\nimport classes from './Card.module.css';\r\n\r\nconst Card = (props) => {\r\n  return <div className={`${classes.card} ${props.className}`}>{props.children}</div>;\r\n};\r\n\r\nexport default Card;","import React from 'react';\r\n\r\nimport classes from './Button.module.css';\r\n\r\nconst Button = (props) => {\r\n  return (\r\n    <button\r\n      className={classes.button}\r\n      type={props.type || 'button'}\r\n      onClick={props.onClick}\r\n    >\r\n      {props.children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;","import React from 'react';\r\nimport Card from './Card';\r\nimport Button from \"./Button\";\r\nimport classes from './RemoveMemberErrorModal.module.css';\r\n\r\nconst RemoveMemberErrorModal = (props) => {\r\n  return (\r\n    <div>\r\n      <div className={classes.backdrop} onClick={props.onHide} />\r\n      <Card className={classes.modal}>\r\n        <header className={classes.header}>\r\n          <h2>{props.title}</h2>\r\n        </header>\r\n        <div className={classes.content}>\r\n          <p style={{fontWeight:'bold'}}>{props.message}</p>\r\n        </div>\r\n        <footer className={classes.actions}>\r\n          <Button onClick={props.onHide}>Okay</Button>\r\n        </footer>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RemoveMemberErrorModal;","import React from \"react\";\r\nimport Card from \"./Card\";\r\nimport Button from \"./Button\";\r\nimport classes from \"./RemoveMemberConfirmationModal.module.css\";\r\n\r\nconst RemoveMemberConfirmationModal = (props) => {\r\n  return (\r\n    <div>\r\n      <div\r\n        className={classes.backdrop}\r\n        onClick={props.onHideRemoveMemberConfirmationModal}\r\n      />\r\n      <Card className={classes.modal}>\r\n        <header className={classes.header}>\r\n          <h2>{props.title}</h2>\r\n        </header>\r\n        <div className={classes.content}>\r\n          <p style={{ fontWeight: \"bold\" }}>{props.message}</p>\r\n        </div>\r\n        <footer className={classes.actions}>\r\n          <Button onClick={props.onConfirmRemoveMember}>Confirm</Button>\r\n          <Button onClick={props.onHideRemoveMemberConfirmationModal}>\r\n            Cancel\r\n          </Button>\r\n        </footer>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RemoveMemberConfirmationModal;\r\n","import Cookies from \"js-cookie\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport axios from \"axios\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useRef, useState } from \"react\";\r\nimport classes from \"./IndividualForm.module.css\";\r\nimport NewGroupBtnDanger from \"./NewGroupBtnDanger\";\r\nimport NewGroupBtnSuccess from \"./NewGroupBtnSuccess\";\r\nimport NewGroupBtnSecondary from \"./NewGroupBtnSecondary\";\r\nimport RemoveMemberErrorModal from \"./RemoveMemberErrorModal\";\r\nimport RemoveMemberConfirmationModal from \"./RemoveMemberConfirmationModal\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { showBackendAlert } from \"./../../utils/backendAlertsController\";\r\n\r\nconst IndividualForm = (props) => {\r\n  const history = useHistory();\r\n  const myContributionInputRef = useRef();\r\n  const currentlyPayingInputRef = useRef();\r\n  const [memberId, setMemberId] = useState(\"\");\r\n  const [memberObj, setMemberObj] = useState({\r\n    myContributionInputIsValid: true,\r\n    currentlyPayingInputIsValid: true,\r\n    myContributionInputErrorMsg: \"\",\r\n    currentlyPayingInputErrorMsg: \"\",\r\n  });\r\n  const [confirmationState, setConfirmationState] = useState(\"\");\r\n  const [showRemoveMemberErrorModal, setShowRemoveMemberErrorModal] =\r\n    useState(false);\r\n  const [\r\n    showRemoveMemberConfirmationModal,\r\n    setShowRemoveMemberConfirmationModal,\r\n  ] = useState(false);\r\n  let clear;\r\n  const registerConfirmation = function () {\r\n    setConfirmationState(\"confirmed\");\r\n    props.numberOfConfirmedMembersHandler(1);\r\n    props.totalMyContributionHandler(\r\n      Number(myContributionInputRef.current.value)\r\n    );\r\n    props.totalCurrentlyPayingHandler(\r\n      Number(currentlyPayingInputRef.current.value)\r\n    );\r\n    const obj = {\r\n      memberId: props.gmail,\r\n      myShare: myContributionInputRef.current.value,\r\n      amountPaid: currentlyPayingInputRef.current.value,\r\n    };\r\n    props.onAddGroupMemberObject(obj);\r\n  };\r\n  const sendMemberConfirmationEmail = async (\r\n    groupName,\r\n    groupWorth,\r\n    share,\r\n    amountPaid\r\n  ) => {\r\n    const token = Cookies.get(\"jwt\");\r\n    if (token) {\r\n      let decoded = jwt_decode(token);\r\n      console.log(decoded);\r\n      try {\r\n        const res = await axios({\r\n          method: \"POST\",\r\n          url: `https://group-expense-manager-api.herokuapp.com/api/v1/users/sendMemberConfirmationEmail`,\r\n          data: {\r\n            groupName,\r\n            groupWorth,\r\n            share,\r\n            amountPaid,\r\n            receiver: props.gmail,\r\n            groupId: props.initialisedGroupId,\r\n          },\r\n          headers: {\r\n            authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n\r\n        if (res.data.status === \"success\") {\r\n          showBackendAlert(\r\n            \"success\",\r\n            \"Member Confirmation Email successfully sent!\"\r\n          );\r\n          return res.data.data.memberId;\r\n        }\r\n      } catch (err) {\r\n        showBackendAlert(\"error\", err);\r\n      }\r\n    } else {\r\n      showBackendAlert(\r\n        \"error\",\r\n        \"You are not logged in to send the desired mail!\"\r\n      );\r\n    }\r\n  };\r\n  const askForConfirmationHandler = async (event) => {\r\n    event.preventDefault();\r\n    let myContributionInput = myContributionInputRef.current.value;\r\n    let currentlyPayingInput = currentlyPayingInputRef.current.value;\r\n    let myContributionInputIsValid = true,\r\n      currentlyPayingInputIsValid = true,\r\n      myContributionInputErrorMsg = \"\",\r\n      currentlyPayingInputErrorMsg = \"\";\r\n    const regEx = /^\\d+$/;\r\n    if (myContributionInput.trim() == \"\") {\r\n      myContributionInputIsValid = false;\r\n      myContributionInputErrorMsg = (\r\n        <p className=\"error-text\">Please enter the contribution field!</p>\r\n      );\r\n    } else if (!myContributionInput.trim().match(regEx)) {\r\n      myContributionInputIsValid = false;\r\n      myContributionInputErrorMsg = (\r\n        <p className=\"error-text\">\r\n          Please ensure that the input is a whole number!\r\n        </p>\r\n      );\r\n    }\r\n\r\n    if (currentlyPayingInput.trim() == \"\") {\r\n      currentlyPayingInputIsValid = false;\r\n      currentlyPayingInputErrorMsg = (\r\n        <p className=\"error-text\">Please enter the currently paying field!</p>\r\n      );\r\n    } else if (!currentlyPayingInput.trim().match(regEx)) {\r\n      currentlyPayingInputIsValid = false;\r\n      currentlyPayingInputErrorMsg = (\r\n        <p className=\"error-text\">\r\n          Please ensure that the input is a whole number!\r\n        </p>\r\n      );\r\n    } else if (currentlyPayingInput.trim() == \"0\") {\r\n      if (myContributionInput.trim() == \"0\") {\r\n        myContributionInputIsValid = false;\r\n        myContributionInputErrorMsg = (\r\n          <p className=\"error-text\">\r\n            My Contribution field and Currently Paying field cannot be 0\r\n            simultaneously!{\" \"}\r\n          </p>\r\n        );\r\n        currentlyPayingInputIsValid = false;\r\n        currentlyPayingInputErrorMsg = (\r\n          <p className=\"error-text\">\r\n            My Contribution field and Currently Paying field cannot be 0\r\n            simultaneously!\r\n          </p>\r\n        );\r\n      }\r\n    }\r\n\r\n    if (!myContributionInputIsValid || !currentlyPayingInputIsValid) {\r\n      setMemberObj({\r\n        myContributionInputIsValid,\r\n        currentlyPayingInputIsValid,\r\n        myContributionInputErrorMsg,\r\n        currentlyPayingInputErrorMsg,\r\n      });\r\n      setConfirmationState(\"\");\r\n    } else {\r\n      setMemberObj({\r\n        myContributionInputIsValid,\r\n        currentlyPayingInputIsValid,\r\n        myContributionInputErrorMsg,\r\n        currentlyPayingInputErrorMsg,\r\n      });\r\n\r\n      const MemberId = await sendMemberConfirmationEmail(\r\n        props.groupNameInput,\r\n        props.totalAmountInput,\r\n        myContributionInput,\r\n        currentlyPayingInput\r\n      );\r\n      console.log(MemberId);\r\n      setConfirmationState(\"pending\");\r\n      setMemberId(MemberId);\r\n      for (let i = 0; i <= 100000000; i++) {}\r\n      clear = setInterval(async () => {\r\n        const token = Cookies.get(\"jwt\");\r\n        if (token) {\r\n          let decoded = jwt_decode(token);\r\n          console.log(decoded);\r\n          try {\r\n            const result = await axios({\r\n              method: \"POST\",\r\n              url: `https://group-expense-manager-api.herokuapp.com/api/v1/users/checkMemberConfirmationStatus`,\r\n              data: {\r\n                groupId: props.initialisedGroupId,\r\n                gmail: props.gmail,\r\n              },\r\n              headers: {\r\n                authorization: `Bearer ${token}`,\r\n              },\r\n            });\r\n\r\n            if (result.data.status === \"success\") {\r\n              if (result.data.data.isConfirmed == true) {\r\n                clearInterval(clear);\r\n                registerConfirmation();\r\n              }\r\n            }\r\n          } catch (err) {\r\n            showBackendAlert(\"error\", err);\r\n          }\r\n        } else {\r\n          showBackendAlert(\"error\", \"You are not logged in!\");\r\n        }\r\n      }, 20 * 1000);\r\n    }\r\n  };\r\n  const editHandler = async () => {\r\n    setConfirmationState(\"\");\r\n    try {\r\n      await axios({\r\n        method: \"PATCH\",\r\n        url: `https://group-expense-manager-api.herokuapp.com/api/v1/users/removeVerificationMember`,\r\n        data: {\r\n          groupId: props.initialisedGroupId,\r\n          gmail: props.gmail,\r\n        },\r\n      });\r\n    } catch (err) {\r\n      showBackendAlert(\"error\", err.response.data.message);\r\n    }\r\n    props.numberOfConfirmedMembersHandler(-1);\r\n    props.totalMyContributionHandler(\r\n      -Number(myContributionInputRef.current.value)\r\n    );\r\n    props.totalCurrentlyPayingHandler(\r\n      -Number(currentlyPayingInputRef.current.value)\r\n    );\r\n    const obj = {\r\n      memberId: props.gmail,\r\n      myShare: myContributionInputRef.current.value,\r\n      amountPaid: currentlyPayingInputRef.current.value,\r\n    };\r\n    props.onDeleteGroupMemberObject(obj);\r\n    setMemberId(\"\");\r\n  };\r\n  const removeMemberHandler = async () => {\r\n    if (props.gmail === props.signedInEmail) {\r\n      setShowRemoveMemberErrorModal(true);\r\n      return;\r\n    }\r\n    try {\r\n      await axios({\r\n        method: \"PATCH\",\r\n        url: `http://127.0.0.1:8080/api/v1/users/removeVerificationMember`,\r\n        data: {\r\n          groupId: props.initialisedGroupId,\r\n          gmail: props.gmail,\r\n        },\r\n      });\r\n    } catch (err) {\r\n      showBackendAlert(\"error\", err.response.data.message);\r\n    }\r\n    setShowRemoveMemberConfirmationModal(true);\r\n    const obj = {\r\n      memberId: props.gmail,\r\n      myShare: myContributionInputRef.current.value,\r\n      amountPaid: currentlyPayingInputRef.current.value,\r\n    };\r\n    props.onDeleteGroupMemberObject(obj);\r\n    setMemberId(\"\");\r\n  };\r\n  const hideRemoveMemberErrorModal = function () {\r\n    setShowRemoveMemberErrorModal(false);\r\n  };\r\n  const hideRemoveMemberConfirmationModalHandler = function () {\r\n    setShowRemoveMemberConfirmationModal(false);\r\n  };\r\n  const ConfirmRemoveMemberHandler = function () {\r\n    props.onRemoveGroupMember(props.gmail);\r\n    props.numberOfConfirmedMembersHandler(-1);\r\n    props.totalMyContributionHandler(\r\n      -Number(myContributionInputRef.current.value)\r\n    );\r\n    props.totalCurrentlyPayingHandler(\r\n      -Number(currentlyPayingInputRef.current.value)\r\n    );\r\n  };\r\n  const myContributionInputClasses = !memberObj.myContributionInputIsValid\r\n    ? \"form-control invalid\"\r\n    : \"form-control\";\r\n\r\n  const currentlyPayingInputClasses = !memberObj.currentlyPayingInputIsValid\r\n    ? \"form-control invalid\"\r\n    : \"form-control\";\r\n  const disabled = confirmationState && \"disabled\";\r\n  const pendingMessage = (\r\n    <p className=\"warning-message\">\r\n      The confirmation request sent is yet not approved!\r\n    </p>\r\n  );\r\n  const confirmedMessage = <p className=\"success-message\">Confirmed!</p>;\r\n  const ModalErrorTitle = \"Error Message\";\r\n  const ModalErrorMessage =\r\n    \"The user who initiated group formation cannot be removed!\";\r\n  const ModalConfirmationTitle = \"Confirmation Message\";\r\n  const ModalConfirmationMessage = `Do you confirm removing this member having gmailId (${props.gmail})?`;\r\n  return (\r\n    <div className={classes.wrapper}>\r\n      {showRemoveMemberConfirmationModal && (\r\n        <RemoveMemberConfirmationModal\r\n          title={ModalConfirmationTitle}\r\n          message={ModalConfirmationMessage}\r\n          onHideRemoveMemberConfirmationModal={\r\n            hideRemoveMemberConfirmationModalHandler\r\n          }\r\n          onConfirmRemoveMember={ConfirmRemoveMemberHandler}\r\n        />\r\n      )}\r\n      {showRemoveMemberErrorModal && (\r\n        <RemoveMemberErrorModal\r\n          title={ModalErrorTitle}\r\n          message={ModalErrorMessage}\r\n          onHide={hideRemoveMemberErrorModal}\r\n        />\r\n      )}\r\n      <div className={classes.title}>{props.gmail}</div>\r\n      <div className={classes.form}>\r\n        <div className={myContributionInputClasses}>\r\n          <label>My Contribution (in Rs.):</label>\r\n          <input\r\n            ref={myContributionInputRef}\r\n            disabled={disabled}\r\n            type=\"number\"\r\n            className={classes.input}\r\n            min=\"0\"\r\n            autoComplete=\"off\"\r\n          />\r\n          {!memberObj.myContributionInputIsValid &&\r\n            memberObj.myContributionInputErrorMsg}\r\n        </div>\r\n        <div className={currentlyPayingInputClasses}>\r\n          <label>Currently Paying (in Rs.):</label>\r\n          <input\r\n            ref={currentlyPayingInputRef}\r\n            disabled={disabled}\r\n            type=\"number\"\r\n            className={classes.input}\r\n            min=\"0\"\r\n            autoComplete=\"off\"\r\n          />\r\n          {!memberObj.currentlyPayingInputIsValid &&\r\n            memberObj.currentlyPayingInputErrorMsg}\r\n        </div>\r\n        <NewGroupBtnSuccess\r\n          onAskForConfirmation={askForConfirmationHandler}\r\n          disabled={disabled}\r\n        >\r\n          Ask for Confirmation\r\n        </NewGroupBtnSuccess>\r\n        {confirmationState == \"pending\" && pendingMessage}\r\n        {confirmationState == \"confirmed\" && confirmedMessage}\r\n        <NewGroupBtnSecondary onEdit={editHandler}>Edit</NewGroupBtnSecondary>\r\n        <NewGroupBtnDanger onRemoveMember={removeMemberHandler}>\r\n          Remove Member\r\n        </NewGroupBtnDanger>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default IndividualForm;\r\n","import { useState } from \"react\";\r\nimport IndividualForm from \"./IndividualForm\";\r\nconst IndividualForms = function (props) {\r\n  const individualForms = props.DUMMY_MEMBERS.map((item) => (\r\n    <IndividualForm\r\n      onAddGroupMemberObject={props.onAddGroupMemberObject}\r\n      onDeleteGroupMemberObject={props.onDeleteGroupMemberObject}\r\n      numberOfConfirmedMembersHandler={props.numberOfConfirmedMembersHandler}\r\n      totalMyContributionHandler={props.totalMyContributionHandler}\r\n      totalCurrentlyPayingHandler={props.totalCurrentlyPayingHandler}\r\n      onRemoveGroupMember={props.onRemoveGroupMember}\r\n      key={item}\r\n      gmail={item}\r\n      initialisedGroupId={props.initialisedGroupId}\r\n      totalAmountInput={props.totalAmountInput}\r\n      groupNameInput={props.groupNameInput}\r\n      signedInEmail={props.signedInEmail}\r\n    />\r\n  ));\r\n  return <div>{individualForms}</div>;\r\n};\r\nexport default IndividualForms;\r\n","import { useRef, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Cookies from \"js-cookie\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport axios from \"axios\";\r\nimport FormModal from \"../UI/FormModal\";\r\nimport classes from \"./NewMemberModal.module.css\";\r\nimport ModalBtn from \"../UI/ModalButton\";\r\nimport CloseBtn from \"./CloseBtn.js\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { showBackendAlert } from \"./../../utils/backendAlertsController\";\r\n\r\nconst NewMemberModal = function (props) {\r\n  const history = useHistory();\r\n  const emailIdInputRef = useRef();\r\n  const [emailIdObj, setEmailIdObj] = useState({\r\n    emailIdInputIsValid: true,\r\n    emailIdInputErrorMsg: \"\",\r\n  });\r\n  const isRegistered = async (emailId) => {\r\n    const token = Cookies.get(\"jwt\");\r\n    if (token) {\r\n      let decoded = jwt_decode(token);\r\n      console.log(decoded);\r\n      try {\r\n        const result = await axios({\r\n          method: \"POST\",\r\n          url: `https://group-expense-manager-api.herokuapp.com/api/v1/users/isRegistered`,\r\n          data: {\r\n            emailId,\r\n          },\r\n          headers: {\r\n            authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n        return result.data.data.isRegistered;\r\n      } catch (err) {\r\n        showBackendAlert(\"error\", err.response.data.message);\r\n      }\r\n    } else {\r\n      showBackendAlert(\"error\", \"You are not logged in!\");\r\n    }\r\n  };\r\n  const formSubmissionHandler = async (event) => {\r\n    event.preventDefault();\r\n    let emailIdInput = emailIdInputRef.current.value;\r\n    let emailIdInputIsValid = true,\r\n      emailIdInputErrorMsg = \"\";\r\n    //const regEx = /^[0-9a-zA-Z]+$/;\r\n    if (emailIdInput.trim() == \"\") {\r\n      emailIdInputIsValid = false;\r\n      emailIdInputErrorMsg = (\r\n        <p className=\"error-text\">Please enter a non-empty email Id!</p>\r\n      );\r\n    } else if (props.DUMMY_MEMBERS.find((member) => member == emailIdInput)) {\r\n      emailIdInputIsValid = false;\r\n      emailIdInputErrorMsg = (\r\n        <p className=\"error-text\">\r\n          The given email is already included in the current group!\r\n        </p>\r\n      );\r\n    } else if (!(await isRegistered(emailIdInput.trim()))) {\r\n      emailIdInputIsValid = false;\r\n      emailIdInputErrorMsg = (\r\n        <p className=\"error-text\">The given email Id is not registered!</p>\r\n      );\r\n    }\r\n\r\n    if (!emailIdInputIsValid) {\r\n      setEmailIdObj({\r\n        emailIdInputIsValid,\r\n        emailIdInputErrorMsg,\r\n      });\r\n    } else {\r\n      setEmailIdObj({\r\n        emailIdInputIsValid,\r\n        emailIdInputErrorMsg,\r\n      });\r\n      for (let i = 0; i <= 100000000; i++) {}\r\n      //console.log(groupObj);\r\n      props.onAddNewMember(emailIdInput);\r\n      emailIdInputRef.current.value = \"\";\r\n      props.onHide();\r\n    }\r\n  };\r\n  const emailIdInputClasses = !emailIdObj.emailIdInputIsValid\r\n    ? \"form-control invalid\"\r\n    : \"form-control\";\r\n  const labelStylesObj = {\r\n    position: \"absolute\",\r\n    fontSize: \"120%\",\r\n    fontWeight: \"bold\",\r\n    marginTop: \"0.2rem\",\r\n    marginLeft: \"-25%\",\r\n    marginBottom: \"0.7rem\",\r\n  };\r\n  const inputStylesObj = {\r\n    position: \"relative\",\r\n    border: \"1px solid black\",\r\n    padding: \"0.15rem\",\r\n    marginBottom: \"0.9rem\",\r\n  };\r\n  return (\r\n    <FormModal className={classes.input} onHide={props.onHide}>\r\n      <form onSubmit={formSubmissionHandler}>\r\n        <div className={emailIdInputClasses}>\r\n          <label style={labelStylesObj} htmlFor=\"emailId\">\r\n            Enter Email\r\n          </label>\r\n          <input\r\n            ref={emailIdInputRef}\r\n            id=\"emailId\"\r\n            type=\"email\"\r\n            autoComplete=\"off\"\r\n            style={inputStylesObj}\r\n          />\r\n          {!emailIdObj.emailIdInputIsValid && emailIdObj.emailIdInputErrorMsg}\r\n        </div>\r\n        <ModalBtn type=\"submit\">Add</ModalBtn>\r\n      </form>\r\n    </FormModal>\r\n  );\r\n};\r\n\r\nexport default NewMemberModal;\r\n","import classes from \"./NewGroupBtnFormSubmission.module.css\";\r\n\r\nconst NewGroupBtnFormSubmission = function (props) {\r\n  return (\r\n    <div className={classes.btnWrapper}>\r\n      <button onClick={props.onCreateGroup}>{props.children}</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewGroupBtnFormSubmission;\r\n","import classes from \"./NewGroupBtnFormCancellation.module.css\";\r\n\r\nconst NewGroupBtnFormCancellation = function (props) {\r\n  return (\r\n    <div className={classes.btnWrapper}>\r\n      <button onClick={props.onShow}>{props.children}</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewGroupBtnFormCancellation;\r\n","import React from \"react\";\r\nimport Card from \"./Card\";\r\nimport Button from \"./Button\";\r\nimport classes from \"./CreateGroupErrorModal.module.css\";\r\n\r\nconst CreateGroupErrorModal = (props) => {\r\n  return (\r\n    <div>\r\n      <div\r\n        className={classes.backdrop}\r\n        onClick={props.HideCreateGroupErrorModal}\r\n      />\r\n      <Card className={classes.modal}>\r\n        <header className={classes.header}>\r\n          <h2>{props.title}</h2>\r\n        </header>\r\n        <div className={classes.content}>\r\n          <p style={{ fontWeight: \"bold\" }}>{props.message}</p>\r\n        </div>\r\n        <footer className={classes.actions}>\r\n          <Button onClick={props.HideCreateGroupErrorModal}>Okay</Button>\r\n        </footer>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateGroupErrorModal;\r\n","import React from \"react\";\r\nimport Card from \"./Card\";\r\nimport Button from \"./Button\";\r\nimport classes from \"./CreateGroupConfirmationModal.module.css\";\r\n\r\nconst CreateGroupConfirmationModal = (props) => {\r\n  return (\r\n    <div>\r\n      <div className={classes.backdrop} onClick={props.onCancel} />\r\n      <Card className={classes.modal}>\r\n        <header className={classes.header}>\r\n          <h2>{props.title}</h2>\r\n        </header>\r\n        <div className={classes.content}>\r\n          <p style={{ fontWeight: \"bold\" }}>{props.message}</p>\r\n        </div>\r\n        <footer className={classes.actions}>\r\n          <Button onClick={props.onConfirm}>Confirm</Button>\r\n          <Button onClick={props.onCancel}>Cancel</Button>\r\n        </footer>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateGroupConfirmationModal;\r\n","import React from \"react\";\r\nimport Card from \"./Card\";\r\nimport Button from \"./Button\";\r\nimport classes from \"./CancelSplittingConfirmationModal.module.css\";\r\n\r\nconst CancelSplittingConfirmationModal = (props) => {\r\n  return (\r\n    <div>\r\n      <div className={classes.backdrop} onClick={props.onHide} />\r\n      <Card className={classes.modal}>\r\n        <header className={classes.header}>\r\n          <h2>{props.title}</h2>\r\n        </header>\r\n        <div className={classes.content}>\r\n          <p style={{ fontWeight: \"bold\" }}>{props.message1}</p>\r\n          <p className=\"error-text\" style={{ fontWeight: \"bold\" }}>\r\n            {props.message2}\r\n          </p>\r\n        </div>\r\n        <footer className={classes.actions}>\r\n          <Button onClick={props.onConfirm}>Confirm</Button>\r\n          <Button onClick={props.onHide}>Cancel</Button>\r\n        </footer>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CancelSplittingConfirmationModal;\r\n","import Cookies from \"js-cookie\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport axios from \"axios\";\r\nimport { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport classes from \"./NewGroupForm.module.css\";\r\nimport GroupFormHeader from \"./GroupFormHeader\";\r\nimport AddGroupMemberBtn from \"./AddGroupMemberBtn\";\r\nimport IndividualForms from \"./IndividualForms\";\r\nimport NewMemberModal from \"./NewMemberModal\";\r\nimport NewGroupBtnFormSubmission from \"./NewGroupBtnFormSubmission\";\r\nimport NewGroupBtnFormCancellation from \"./NewGroupBtnFormCancellation\";\r\nimport CreateGroupErrorModal from \"./CreateGroupErrorModal\";\r\nimport CreateGroupConfirmationModal from \"./CreateGroupConfirmationModal\";\r\nimport CancelSplittingConfirmationModal from \"./CancelSplittingConfirmationModal\";\r\nimport { showBackendAlert } from \"./../../utils/backendAlertsController\";\r\n\r\nconst NewGroupForm = function (props) {\r\n  const history = useHistory(\"/\");\r\n  const [DUMMY_MEMBERS, setDUMMY_MEMBERS] = useState([props.user.email]);\r\n  const [New_Group_Members, setNew_Group_Members] = useState([]);\r\n  const addGroupMemberObjectHandler = function (obj) {\r\n    setNew_Group_Members((prevMembers) => [...prevMembers, obj]);\r\n  };\r\n  const deleteGroupMemberObjectHandler = function (obj) {\r\n    setNew_Group_Members(New_Group_Members.filter((ob) => ob !== obj));\r\n  };\r\n  const [showNewMemberModal, setShowNewMemberModal] = useState(false);\r\n  const [showCreateGroupErrorModal, setShowCreateGroupErrorModal] =\r\n    useState(false);\r\n  const [\r\n    showCreateGroupConfirmationModal,\r\n    setShowCreateGroupConfirmationModal,\r\n  ] = useState(false);\r\n  const [numberOfConfirmedMembers, setNumberOfConfirmedMembers] = useState(0);\r\n  const [totalMyContribution, setTotalMyContribution] = useState(0);\r\n  const [totalCurrentlyPaying, setTotalCurrentlyPaying] = useState(0);\r\n  const [confirmedMembersState, setConfirmedMembersState] = useState(false);\r\n  const [totalMyContributionState, setTotalMyContributionState] = useState(\"\");\r\n  const [totalCurrentlyPayingState, setTotalCurrentlyPayingState] =\r\n    useState(\"\");\r\n  const [\r\n    showCancelSplittingConfirmationModal,\r\n    setShowCancelSplittingConfirmationModal,\r\n  ] = useState(false);\r\n  const numberOfConfirmedMembersHandler = function (val) {\r\n    setNumberOfConfirmedMembers((prevValue) => prevValue + val);\r\n  };\r\n  const totalMyContributionHandler = function (val) {\r\n    setTotalMyContribution((prevValue) => prevValue + val);\r\n  };\r\n  const totalCurrentlyPayingHandler = function (val) {\r\n    setTotalCurrentlyPaying((prevValue) => prevValue + val);\r\n  };\r\n  const showNewMemberModalHandler = function () {\r\n    setShowNewMemberModal(true);\r\n  };\r\n  const hideNewMemberModalHandler = function () {\r\n    setShowNewMemberModal(false);\r\n  };\r\n  const addNewMemberHandler = function (newMember) {\r\n    setDUMMY_MEMBERS((prevValue) => [...prevValue, newMember]);\r\n  };\r\n  const RemoveGroupMemberHandler = function (gmail) {\r\n    let MEMBERS = DUMMY_MEMBERS.filter((el) => el != gmail);\r\n    setDUMMY_MEMBERS(MEMBERS);\r\n  };\r\n  const HideCreateGroupErrorModalHandler = function () {\r\n    setShowCreateGroupErrorModal(false);\r\n  };\r\n  const createGroupHandler = function () {\r\n    setShowCreateGroupErrorModal(true);\r\n    if (numberOfConfirmedMembers === DUMMY_MEMBERS.length) {\r\n      setConfirmedMembersState(true);\r\n    } else {\r\n      setConfirmedMembersState(false);\r\n      return;\r\n    }\r\n    if (Number(props.totalAmountInput.trim()) == totalMyContribution) {\r\n      setTotalMyContributionState(\"equal\");\r\n    } else if (Number(props.totalAmountInput.trim()) < totalMyContribution) {\r\n      setTotalMyContributionState(\"greater\");\r\n      return;\r\n    } else if (Number(props.totalAmountInput.trim()) > totalMyContribution) {\r\n      setTotalMyContributionState(\"lesser\");\r\n      return;\r\n    }\r\n    if (Number(props.totalAmountInput.trim()) == totalCurrentlyPaying) {\r\n      setTotalCurrentlyPayingState(\"equal\");\r\n    } else if (Number(props.totalAmountInput.trim()) < totalCurrentlyPaying) {\r\n      setTotalCurrentlyPayingState(\"greater\");\r\n      return;\r\n    } else if (Number(props.totalAmountInput.trim()) > totalCurrentlyPaying) {\r\n      setTotalCurrentlyPayingState(\"lesser\");\r\n      return;\r\n    }\r\n    setShowCreateGroupConfirmationModal(true);\r\n  };\r\n  const confirmCreateGroupHandler = async () => {\r\n    setShowCreateGroupConfirmationModal(false);\r\n    const token = Cookies.get(\"jwt\");\r\n    let res;\r\n    if (token) {\r\n      let decoded = jwt_decode(token);\r\n      console.log(decoded);\r\n      try {\r\n        res = await axios({\r\n          method: \"POST\",\r\n          url: `https://group-expense-manager-api.herokuapp.com/api/v1/groups/createNewGroup`,\r\n          data: {\r\n            groupId: props.initialisedGroupId,\r\n            email: props.user.email,\r\n          },\r\n          headers: {\r\n            authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n\r\n        if (res.data.status === \"success\") {\r\n          showBackendAlert(\"success\", `Group created successfully!`);\r\n          history.push(\"/groups\");\r\n          //props.onCreateNewGroup(res.data.data.groupObj);\r\n        }\r\n      } catch (err) {}\r\n    } else {\r\n      showBackendAlert(\"error\", \"You are not logged in!\");\r\n    }\r\n  };\r\n  const cancelCreateGroupHandler = function () {\r\n    setShowCreateGroupConfirmationModal(false);\r\n  };\r\n  const showCancelSplittingModalHandler = function () {\r\n    setShowCancelSplittingConfirmationModal(true);\r\n  };\r\n  const hideCancelSplittingModalHandler = function () {\r\n    setShowCancelSplittingConfirmationModal(false);\r\n  };\r\n  const confirmCancellingSplittingHandler = async () => {\r\n    history.replace(\"/groups\");\r\n    try {\r\n      const res = await axios({\r\n        method: \"DELETE\",\r\n        url: `http://127.0.0.1:8080/api/v1/groups/deleteGroupVerification/${props.initialisedGroupId}`,\r\n      });\r\n    } catch (err) {}\r\n  };\r\n  let isGroupFormInputsValid = true;\r\n  let createGroupModalErrorMessage = \"\";\r\n  if (confirmedMembersState == false) {\r\n    isGroupFormInputsValid = false;\r\n    createGroupModalErrorMessage = \"All the users' forms are not confirmed!\";\r\n  } else if (totalMyContributionState != \"equal\") {\r\n    isGroupFormInputsValid = false;\r\n    if (totalMyContributionState == \"greater\") {\r\n      createGroupModalErrorMessage = `The sum of all My Contribution field cannot exceed ${props.totalAmountInput}`;\r\n    } else if (totalMyContributionState == \"lesser\") {\r\n      createGroupModalErrorMessage = `The sum of all My Contribution field cannot be less than ${props.totalAmountInput}`;\r\n    }\r\n  } else if (totalCurrentlyPayingState != \"equal\") {\r\n    isGroupFormInputsValid = false;\r\n    if (totalCurrentlyPayingState == \"greater\") {\r\n      createGroupModalErrorMessage = `The sum of all Currently Paying field cannot exceed ${props.totalAmountInput}`;\r\n    } else if (totalCurrentlyPayingState == \"lesser\") {\r\n      createGroupModalErrorMessage = `The sum of all Currently Paying field cannot be less than ${props.totalAmountInput}`;\r\n    }\r\n  }\r\n  const createGroupConfirmationModalMessage =\r\n    \"Do you confirm creating new group with given information?\";\r\n  const cancelSplittingConfirmationModalMessageHeader =\r\n    \"Do you confirm cancel splitting?\";\r\n  const cancelSplittingConfirmationModalMessageFooter =\r\n    \"(All the entered data in the forms will be lost!)\";\r\n  return (\r\n    <div className={classes.container}>\r\n      {showCreateGroupConfirmationModal && (\r\n        <CreateGroupConfirmationModal\r\n          title=\"Confirmation Message\"\r\n          message={createGroupConfirmationModalMessage}\r\n          onConfirm={confirmCreateGroupHandler}\r\n          onCancel={cancelCreateGroupHandler}\r\n        />\r\n      )}\r\n      {showCreateGroupErrorModal && !isGroupFormInputsValid && (\r\n        <CreateGroupErrorModal\r\n          HideCreateGroupErrorModal={HideCreateGroupErrorModalHandler}\r\n          title=\"Error Message\"\r\n          message={createGroupModalErrorMessage}\r\n        />\r\n      )}\r\n      {showNewMemberModal && (\r\n        <NewMemberModal\r\n          DUMMY_MEMBERS={DUMMY_MEMBERS}\r\n          Dummy_Users={props.Dummy_Users}\r\n          onAddNewMember={addNewMemberHandler}\r\n          onHide={hideNewMemberModalHandler}\r\n        />\r\n      )}\r\n      {showCancelSplittingConfirmationModal && (\r\n        <CancelSplittingConfirmationModal\r\n          title=\"Confirmation Message\"\r\n          message1={cancelSplittingConfirmationModalMessageHeader}\r\n          message2={cancelSplittingConfirmationModalMessageFooter}\r\n          onHide={hideCancelSplittingModalHandler}\r\n          onConfirm={confirmCancellingSplittingHandler}\r\n        />\r\n      )}\r\n      <GroupFormHeader\r\n        groupNameInput={props.groupNameInput}\r\n        totalAmountInput={props.totalAmountInput}\r\n      />\r\n      <AddGroupMemberBtn\r\n        onShowNewMemberModal={showNewMemberModalHandler}\r\n        onHide={hideNewMemberModalHandler}\r\n      />\r\n      <IndividualForms\r\n        DUMMY_MEMBERS={DUMMY_MEMBERS}\r\n        numberOfConfirmedMembersHandler={numberOfConfirmedMembersHandler}\r\n        totalMyContributionHandler={totalMyContributionHandler}\r\n        totalCurrentlyPayingHandler={totalCurrentlyPayingHandler}\r\n        onRemoveGroupMember={RemoveGroupMemberHandler}\r\n        onAddGroupMemberObject={addGroupMemberObjectHandler}\r\n        onDeleteGroupMemberObject={deleteGroupMemberObjectHandler}\r\n        initialisedGroupId={props.initialisedGroupId}\r\n        totalAmountInput={props.totalAmountInput}\r\n        groupNameInput={props.groupNameInput}\r\n        signedInEmail={props.user.email}\r\n      />\r\n      <NewGroupBtnFormSubmission onCreateGroup={createGroupHandler}>\r\n        Create Group\r\n      </NewGroupBtnFormSubmission>\r\n      <NewGroupBtnFormCancellation onShow={showCancelSplittingModalHandler}>\r\n        Cancel Splitting\r\n      </NewGroupBtnFormCancellation>\r\n    </div>\r\n  );\r\n};\r\nexport default NewGroupForm;\r\n","import axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport Cookies from \"js-cookie\";\r\nimport { useRef, useContext, useState, Fragment } from \"react\";\r\nimport AuthContext from \"./../../store/auth-context\";\r\nimport { showBackendAlert } from \"./../../utils/backendAlertsController\";\r\nimport \"./Login.css\";\r\n\r\nconst SignInForm = function (props) {\r\n  const switchToSignUpFormHandler = function () {\r\n    const container = document.querySelector(\".container\");\r\n    container.classList.add(\"sign-up-mode\");\r\n  };\r\n  const history = useHistory();\r\n  const [cookies, setCookie] = useCookies([\"jwt\"]);\r\n  const emailInputRef = useRef();\r\n  const passwordInputRef = useRef();\r\n\r\n  const authCtx = useContext(AuthContext);\r\n\r\n  const loginUser = async (email, password) => {\r\n    try {\r\n      const res = await axios({\r\n        method: \"POST\",\r\n        url: \"https://group-expense-manager-api.herokuapp.com/api/v1/users/login\",\r\n        data: {\r\n          email,\r\n          password,\r\n        },\r\n      });\r\n      console.log(res);\r\n      if (res.data.status === \"success\") {\r\n        showBackendAlert(\"success\", \"Signed in successfully!\");\r\n        let expires = new Date();\r\n        expires.setTime(expires.getTime() + 30 * 24 * 60 * 60 * 1000);\r\n        const cookieOptions = {\r\n          path: \"/\",\r\n          expires,\r\n        };\r\n        setCookie(\"jwt\", res.data.token, cookieOptions);\r\n        const token = Cookies.get(\"jwt\");\r\n        authCtx.login(token);\r\n        history.replace(\"/groups\");\r\n        window.location.reload(true);\r\n      }\r\n    } catch (err) {\r\n      console.log(\"Signup error!!!!!!\");\r\n      console.log(err);\r\n      showBackendAlert(\"error\", err.response.data.message);\r\n    }\r\n  };\r\n  const formSubmissionHandler = function (event) {\r\n    event.preventDefault();\r\n    const emailInput = emailInputRef.current.value.trim();\r\n    const passwordInput = passwordInputRef.current.value.trim();\r\n    loginUser(emailInput, passwordInput);\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <form\r\n        action=\"#\"\r\n        className=\"sign-in-form\"\r\n        onSubmit={formSubmissionHandler}\r\n      >\r\n        <h2 className=\"title\">Sign in</h2>\r\n        <div className=\"input-field\">\r\n          <i className=\"fas fa-user\"></i>\r\n          <input type=\"email\" placeholder=\"Email\" ref={emailInputRef} />\r\n        </div>\r\n        <div className=\"input-field\">\r\n          <i className=\"fas fa-lock\"></i>\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            ref={passwordInputRef}\r\n          />\r\n        </div>\r\n        <input type=\"submit\" value=\"Login\" className=\"btn solid\" />\r\n        <a\r\n          style={{ color: \"black\" }}\r\n          onClick={props.onShowPasswordResetEmailFormModal}\r\n        >\r\n          Forgot Password?\r\n        </a>\r\n        <a\r\n          style={{\r\n            position: \"relative\",\r\n            color: \"black\",\r\n            marginTop: \"2%\",\r\n            textDecoration: \"underline\",\r\n          }}\r\n          className=\"sign-up-link\"\r\n          onClick={switchToSignUpFormHandler}\r\n        >\r\n          Sign Up\r\n        </a>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default SignInForm;\r\n","import axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useRef } from \"react\";\r\nimport { showBackendAlert } from \"./../../utils/backendAlertsController\";\r\nimport \"./Login.css\";\r\n\r\nconst SignUpForm = function () {\r\n  const history = useHistory();\r\n  const nameInputRef = useRef();\r\n  const usernameInputRef = useRef();\r\n  const emailInputRef = useRef();\r\n  const mobileNoInputRef = useRef();\r\n  const passwordInputRef = useRef();\r\n  const passwordConfirmInputRef = useRef();\r\n\r\n  const createUser = async (\r\n    name,\r\n    username,\r\n    email,\r\n    contactNo,\r\n    password,\r\n    passwordConfirm\r\n  ) => {\r\n    try {\r\n      const res = await axios({\r\n        method: \"POST\",\r\n        url: \"https://group-expense-manager-api.herokuapp.com/api/v1/users/signup\",\r\n        data: {\r\n          name,\r\n          username,\r\n          email,\r\n          contactNo,\r\n          password,\r\n          passwordConfirm,\r\n        },\r\n      });\r\n      //alert(res.data.status);\r\n      if (res.data.status === \"PENDING\") {\r\n        showBackendAlert(\"success\", res.data.message);\r\n      }\r\n    } catch (err) {\r\n      console.log(\"Signup error!!!!!!\");\r\n      console.log(err.response.data.message);\r\n      showBackendAlert(\"error\", err.response.data.message);\r\n    }\r\n  };\r\n  const formSubmissionHandler = function (event) {\r\n    event.preventDefault();\r\n    const nameInput = nameInputRef.current.value.trim();\r\n    const usernameInput = usernameInputRef.current.value.trim();\r\n    const emailInput = emailInputRef.current.value.trim();\r\n    const mobileNoInput = mobileNoInputRef.current.value.trim();\r\n    const passwordInput = passwordInputRef.current.value.trim();\r\n    const passwordConfirmInput = passwordConfirmInputRef.current.value.trim();\r\n    createUser(\r\n      nameInput,\r\n      usernameInput,\r\n      emailInput,\r\n      mobileNoInput,\r\n      passwordInput,\r\n      passwordConfirmInput\r\n    );\r\n  };\r\n  return (\r\n    <form action=\"#\" className=\"sign-up-form\" onSubmit={formSubmissionHandler}>\r\n      <h2 className=\"title\">Sign up</h2>\r\n      <div className=\"input-field\">\r\n        <i className=\"fas fa-user\"></i>\r\n        <input\r\n          ref={nameInputRef}\r\n          type=\"text\"\r\n          placeholder=\"Name\"\r\n          autoComplete=\"on\"\r\n        />\r\n      </div>\r\n      <div className=\"input-field\">\r\n        <i className=\"fas fa-user\"></i>\r\n        <input\r\n          ref={usernameInputRef}\r\n          type=\"text\"\r\n          placeholder=\"Generate Unique Username\"\r\n          autoComplete=\"on\"\r\n        />\r\n      </div>\r\n      <div className=\"input-field\">\r\n        <i className=\"fas fa-envelope\"></i>\r\n        <input\r\n          ref={emailInputRef}\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          autoComplete=\"on\"\r\n        />\r\n      </div>\r\n      <div className=\"input-field\">\r\n        <i className=\"fas fa-phone-alt\"></i>\r\n        <input ref={mobileNoInputRef} placeholder=\"Mobile No\" />\r\n      </div>\r\n      <div className=\"input-field\">\r\n        <i className=\"fas fa-lock\"></i>\r\n        <input\r\n          ref={passwordInputRef}\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          autoComplete=\"on\"\r\n        />\r\n      </div>\r\n      <div className=\"input-field\">\r\n        <i className=\"fas fa-lock\"></i>\r\n        <input\r\n          ref={passwordConfirmInputRef}\r\n          type=\"password\"\r\n          placeholder=\"Confirm Password\"\r\n          autoComplete=\"on\"\r\n        />\r\n      </div>\r\n      <input type=\"submit\" className=\"btn\" value=\"Sign up\" />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SignUpForm;\r\n","import \"./Login.css\";\r\nimport SignInForm from \"./SignInForm\";\r\nimport SignUpForm from \"./SignUpForm\";\r\n\r\nconst Forms = function (props) {\r\n  return (\r\n    <div className=\"forms-container\">\r\n      <div className=\"signin-signup\">\r\n        <SignInForm\r\n          onShowPasswordResetEmailFormModal={\r\n            props.onShowPasswordResetEmailFormModal\r\n          }\r\n        />\r\n        <SignUpForm />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Forms;\r\n","export default __webpack_public_path__ + \"static/media/log.789e0432.svg\";","import \"./Login.css\";\r\nimport log from \"./log.svg\";\r\n\r\nconst LeftPanel = function () {\r\n  const switchToSignUpFormHandler = function () {\r\n    const container = document.querySelector(\".container\");\r\n    container.classList.add(\"sign-up-mode\");\r\n  };\r\n  return (\r\n    <div className=\"panel left-panel\">\r\n      <p className=\"app-name\" style={{ fontSize: \"165%\" }}>\r\n        Group Expense Manager\r\n      </p>\r\n      <div className=\"content\">\r\n        <h3>New here ?</h3>\r\n        <p style={{ fontSize: \"125%\" }}>\r\n          Get registered in order to get started with creating your own group\r\n          expenses\r\n        </p>\r\n        <button\r\n          className=\"btn transparent\"\r\n          id=\"sign-up-btn\"\r\n          onClick={switchToSignUpFormHandler}\r\n        >\r\n          Sign up\r\n        </button>\r\n      </div>\r\n      <img src={log} className=\"image\" alt=\"\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LeftPanel;\r\n","export default __webpack_public_path__ + \"static/media/register.477c852a.svg\";","import \"./Login.css\";\r\nimport register from \"./register.svg\";\r\n\r\nconst RightPanel = function () {\r\n  const switchToSignInFormHandler = function () {\r\n    const container = document.querySelector(\".container\");\r\n    container.classList.remove(\"sign-up-mode\");\r\n  };\r\n  return (\r\n    <div className=\"panel right-panel\">\r\n      <h1 className=\"app-name\" style={{ fontSize: \"165%\" }}>\r\n        Group Expense Manager\r\n      </h1>\r\n      <div className=\"content\">\r\n        <h3>One of us ?</h3>\r\n        <p style={{ fontSize: \"125%\" }}>\r\n          A place where you can create your group expenses and settle up those\r\n          as well!\r\n        </p>\r\n        <button\r\n          className=\"btn transparent\"\r\n          id=\"sign-in-btn\"\r\n          onClick={switchToSignInFormHandler}\r\n        >\r\n          Sign in\r\n        </button>\r\n      </div>\r\n\r\n      <img src={register} className=\"image\" alt=\"\" />\r\n      <a\r\n        style={{\r\n          position: \"relative\",\r\n          color: \"white\",\r\n          marginLeft: \"15%\",\r\n          marginBottom: \"8%\",\r\n          textDecoration: \"underline\",\r\n          justifyContent: \"center\",\r\n          fontSize: \"100%\",\r\n        }}\r\n        className=\"sign-up-link\"\r\n        onClick={switchToSignInFormHandler}\r\n      >\r\n        Sign In\r\n      </a>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RightPanel;\r\n","import \"./Login.css\";\r\nimport LeftPanel from \"./LeftPanel\";\r\nimport RightPanel from \"./RightPanel\";\r\n\r\nconst Panels = function () {\r\n  return (\r\n    <div className=\"panels-container\">\r\n      <LeftPanel />\r\n      <RightPanel />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Panels;\r\n","import { useRef, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Cookies from \"js-cookie\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport axios from \"axios\";\r\nimport FormModal from \"../UI/FormModal\";\r\nimport classes from \"./PasswordResetEmailFormModal.module.css\";\r\nimport ModalBtn from \"../UI/ModalButton\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { showBackendAlert } from \"./../../utils/backendAlertsController\";\r\n\r\nconst PasswordResetEmailFormModal = function (props) {\r\n  const history = useHistory();\r\n  const emailIdInputRef = useRef();\r\n  const [emailIdObj, setEmailIdObj] = useState({\r\n    emailIdInputIsValid: true,\r\n    emailIdInputErrorMsg: \"\",\r\n  });\r\n  const sendPasswordResetEmail = async (emailId) => {\r\n    try {\r\n      const res = await axios({\r\n        method: \"POST\",\r\n        url: \"https://group-expense-manager-api.herokuapp.com/api/v1/users/forgotPassword\",\r\n        data: {\r\n          email: emailId,\r\n        },\r\n      });\r\n      if (res.data.status === \"success\") {\r\n        showBackendAlert(\r\n          \"success\",\r\n          \"Email has been sent!! Kindly activate your account within 10 minutes.\"\r\n        );\r\n      }\r\n    } catch (err) {\r\n      showBackendAlert(\"error\", err.response.data.message);\r\n    }\r\n  };\r\n  const isRegistered = async (emailId) => {\r\n    try {\r\n      const result = await axios({\r\n        method: \"POST\",\r\n        url: `https://group-expense-manager-api.herokuapp.com/api/v1/users/isRegistered`,\r\n        data: {\r\n          emailId,\r\n        },\r\n      });\r\n      return result.data.data.isRegistered;\r\n    } catch (err) {\r\n      showBackendAlert(\"error\", err.response.data.message);\r\n    }\r\n  };\r\n  const formSubmissionHandler = async (event) => {\r\n    event.preventDefault();\r\n    let emailIdInput = emailIdInputRef.current.value;\r\n    let emailIdInputIsValid = true,\r\n      emailIdInputErrorMsg = \"\";\r\n    //const regEx = /^[0-9a-zA-Z]+$/;\r\n    if (emailIdInput.trim() == \"\") {\r\n      emailIdInputIsValid = false;\r\n      emailIdInputErrorMsg = (\r\n        <p className=\"error-text\">Please enter a non-empty email Id!</p>\r\n      );\r\n    } else if (!(await isRegistered(emailIdInput.trim()))) {\r\n      emailIdInputIsValid = false;\r\n      emailIdInputErrorMsg = (\r\n        <p className=\"error-text\">The given email Id is not registered!</p>\r\n      );\r\n    }\r\n\r\n    if (!emailIdInputIsValid) {\r\n      setEmailIdObj({\r\n        emailIdInputIsValid,\r\n        emailIdInputErrorMsg,\r\n      });\r\n    } else {\r\n      setEmailIdObj({\r\n        emailIdInputIsValid,\r\n        emailIdInputErrorMsg,\r\n      });\r\n      for (let i = 0; i <= 100000000; i++) {}\r\n      //console.log(groupObj);\r\n      sendPasswordResetEmail(emailIdInput.trim());\r\n      emailIdInputRef.current.value = \"\";\r\n      props.onHide();\r\n    }\r\n  };\r\n  const emailIdInputClasses = !emailIdObj.emailIdInputIsValid\r\n    ? \"form-control invalid\"\r\n    : \"form-control\";\r\n  const labelStylesObj = {\r\n    position: \"absolute\",\r\n    fontSize: \"120%\",\r\n    fontWeight: \"bold\",\r\n    marginTop: \"0.2rem\",\r\n    marginLeft: \"-25%\",\r\n    marginBottom: \"0.7rem\",\r\n  };\r\n  const inputStylesObj = {\r\n    position: \"relative\",\r\n    border: \"1px solid black\",\r\n    padding: \"0.15rem\",\r\n    marginBottom: \"0.9rem\",\r\n  };\r\n  return (\r\n    <FormModal className={classes.input} onHide={props.onHide}>\r\n      <form onSubmit={formSubmissionHandler}>\r\n        <div className={emailIdInputClasses}>\r\n          <label style={labelStylesObj} htmlFor=\"emailId\">\r\n            Enter Email\r\n          </label>\r\n          <input\r\n            ref={emailIdInputRef}\r\n            id=\"emailId\"\r\n            type=\"email\"\r\n            autoComplete=\"off\"\r\n            style={inputStylesObj}\r\n          />\r\n          {!emailIdObj.emailIdInputIsValid && emailIdObj.emailIdInputErrorMsg}\r\n        </div>\r\n        <ModalBtn type=\"submit\">Proceed</ModalBtn>\r\n      </form>\r\n    </FormModal>\r\n  );\r\n};\r\n\r\nexport default PasswordResetEmailFormModal;\r\n","import \"./Login.css\";\r\nimport { useState, Fragment } from \"react\";\r\nimport Forms from \"./Forms\";\r\nimport Panels from \"./Panels\";\r\nimport PasswordResetEmailFormModal from \"./PasswordResetEmailFormModal\";\r\n\r\nconst Login = function () {\r\n  const [showPasswordResetEmailFormModal, setShowPasswordResetEmailFormModal] =\r\n    useState(false);\r\n  const showPasswordResetEmailFormModalHandler = function () {\r\n    setShowPasswordResetEmailFormModal(true);\r\n  };\r\n  const hidePasswordResetEmailFormModalHandler = function () {\r\n    setShowPasswordResetEmailFormModal(false);\r\n  };\r\n  return (\r\n    <div className=\"container\">\r\n      {showPasswordResetEmailFormModal && (\r\n        <PasswordResetEmailFormModal\r\n          onHide={hidePasswordResetEmailFormModalHandler}\r\n        />\r\n      )}\r\n      <Forms\r\n        onShowPasswordResetEmailFormModal={\r\n          showPasswordResetEmailFormModalHandler\r\n        }\r\n      />\r\n      <Panels />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import MemberName from \"./MemberName\";\r\nimport \"./Member.css\";\r\n\r\nconst Member = function (props) {\r\n  const myShare = props.myShare;\r\n  const totalAmountPaid = props.totalAmountPaid;\r\n  const amountReceived = props.amountReceived;\r\n  const name = props.name;\r\n  let debtStyle;\r\n  let userDebtStatus;\r\n  if (myShare + amountReceived > totalAmountPaid) {\r\n    userDebtStatus = `Owe Rs ${myShare - totalAmountPaid}`;\r\n    debtStyle = \"status-unpaid\";\r\n  } else if (myShare + amountReceived === totalAmountPaid) {\r\n    userDebtStatus = `Settled Up`;\r\n    debtStyle = \"status-paid\";\r\n  } else {\r\n    userDebtStatus = `Owed Rs ${totalAmountPaid - (myShare + amountReceived)}`;\r\n    debtStyle = \"status-pending\";\r\n  }\r\n  return (\r\n    <tr>\r\n      <td>{`${name}`}</td>\r\n      <td class=\"amount\">{`Rs. ${myShare}`}</td>\r\n      <td class=\"amount\">{`Rs. ${totalAmountPaid}`}</td>\r\n      <td class=\"amount\">{`Rs. ${amountReceived}`}</td>\r\n      <td>\r\n        <p class={`status ${debtStyle}`}>{userDebtStatus}</p>\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default Member;\r\n","import Cookies from \"js-cookie\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport axios from \"axios\";\r\nimport Member from \"./Member\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useState, useEffect, useCallback } from \"react\";\r\nimport { showBackendAlert } from \"./../../../utils/backendAlertsController\";\r\n\r\nimport \"./Members.css\";\r\n\r\nconst Members = function (props) {\r\n  const params = useParams();\r\n  const groupId = params.groupId;\r\n  const [groupObj, setGroupObj] = useState(null);\r\n  const [user, setUser] = useState(null);\r\n\r\n  const fetchGroupFromServer = useCallback(async () => {\r\n    const token = Cookies.get(\"jwt\");\r\n    if (token) {\r\n      let decoded = jwt_decode(token);\r\n      console.log(decoded);\r\n      try {\r\n        const res = await axios({\r\n          method: \"GET\",\r\n          url: `https://group-expense-manager-api.herokuapp.com/api/v1/groups/${groupId}`,\r\n          headers: {\r\n            authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n\r\n        if (res.data.status === \"success\") {\r\n          console.log(\"hello\");\r\n          setGroupObj(res.data.data.group);\r\n          console.log(res.data.data.group);\r\n        }\r\n      } catch (err) {\r\n        showBackendAlert(\"error\", err);\r\n      }\r\n    } else {\r\n      showBackendAlert(\"error\", \"You are not logged in to access the group!\");\r\n    }\r\n  }, []);\r\n  const fetchUserFromServer = useCallback(async () => {\r\n    const token = Cookies.get(\"jwt\");\r\n    if (token) {\r\n      let decoded = jwt_decode(token);\r\n      console.log(decoded);\r\n      try {\r\n        const res = await axios({\r\n          method: \"GET\",\r\n          url: `https://group-expense-manager-api.herokuapp.com/api/v1/users/${decoded.id}`,\r\n          headers: {\r\n            authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n\r\n        if (res.data.status === \"success\") {\r\n          console.log(res.data.data.user);\r\n          setUser(res.data.data.user);\r\n        }\r\n      } catch (err) {\r\n        showBackendAlert(\"error\", err);\r\n      }\r\n    } else {\r\n      showBackendAlert(\"error\", \"You are not logged in to access the group!\");\r\n    }\r\n  }, []);\r\n  useEffect(() => {\r\n    fetchUserFromServer();\r\n    fetchGroupFromServer();\r\n  }, [fetchUserFromServer, fetchGroupFromServer]);\r\n  let signedInMember;\r\n  let MembersExceptSignedInMember = [];\r\n  let Members = [];\r\n  let filteredMembers = [];\r\n  if (groupObj && user) {\r\n    signedInMember = groupObj.members.find((el) => el.memberId === user.email);\r\n    MembersExceptSignedInMember = groupObj.members.filter(\r\n      (el) => el.memberId !== user.email\r\n    );\r\n\r\n    Members = [\r\n      <Member\r\n        key={signedInMember._id}\r\n        id={signedInMember._id}\r\n        name=\"You\"\r\n        myShare={signedInMember.myShare}\r\n        amountPaid={signedInMember.amountPaid}\r\n        totalAmountPaid={signedInMember.totalAmountPaid}\r\n        amountReceived={signedInMember.amountReceived}\r\n      />,\r\n    ];\r\n    filteredMembers = MembersExceptSignedInMember.map((el) => (\r\n      <Member\r\n        key={el._id}\r\n        id={el._id}\r\n        name={el.memberId}\r\n        myShare={el.myShare}\r\n        amountPaid={el.amountPaid}\r\n        totalAmountPaid={el.totalAmountPaid}\r\n        amountReceived={el.amountReceived}\r\n      />\r\n    ));\r\n    for (const el of filteredMembers) Members.push(el);\r\n  }\r\n  return (\r\n    <div className=\"members\">\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Name</th>\r\n            <th>Share</th>\r\n            <th>Amount Paid</th>\r\n            <th>Amount Received</th>\r\n            <th>Status</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>{Members}</tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Members;\r\n","import \"./Contact.css\";\r\n\r\nconst Contact = function (props) {\r\n  const name = props.name;\r\n  const email = props.email;\r\n  const contactNo = props.contactNo;\r\n  return (\r\n    <tr>\r\n      <td>{`${name}`}</td>\r\n      <td>{`${email}`}</td>\r\n      <td>{`${contactNo}`}</td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n","import Cookies from \"js-cookie\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport axios from \"axios\";\r\nimport Contact from \"./Contact\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useState, useEffect, useCallback } from \"react\";\r\nimport { showBackendAlert } from \"./../../../utils/backendAlertsController\";\r\n\r\nimport \"./Contacts.css\";\r\n\r\nconst Contacts = function (props) {\r\n  const params = useParams();\r\n  const groupId = params.groupId;\r\n  const [groupObj, setGroupObj] = useState(null);\r\n  const [users, setUsers] = useState(null);\r\n\r\n  const fetchGroupFromServer = useCallback(async () => {\r\n    const token = Cookies.get(\"jwt\");\r\n    if (token) {\r\n      let decoded = jwt_decode(token);\r\n      //console.log(decoded);\r\n      try {\r\n        const res = await axios({\r\n          method: \"GET\",\r\n          url: `https://group-expense-manager-api.herokuapp.com/api/v1/groups/${groupId}`,\r\n          headers: {\r\n            authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n\r\n        if (res.data.status === \"success\") {\r\n          setGroupObj(res.data.data.group);\r\n        }\r\n      } catch (err) {\r\n        showBackendAlert(\"error\", err.response.data.message);\r\n      }\r\n    } else {\r\n      showBackendAlert(\"error\", \"You are not logged in to access the group!\");\r\n    }\r\n  }, []);\r\n  const fetchUsersFromServer = useCallback(async () => {\r\n    const token = Cookies.get(\"jwt\");\r\n    if (token) {\r\n      let decoded = jwt_decode(token);\r\n      // console.log(decoded);\r\n      try {\r\n        const res = await axios({\r\n          method: \"GET\",\r\n          url: `https://group-expense-manager-api.herokuapp.com/api/v1/users/getAllUsers`,\r\n          headers: {\r\n            authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n        // console.log(res);\r\n        if (res.data.status === \"success\") {\r\n          setUsers(res.data.data.users);\r\n        }\r\n      } catch (err) {\r\n        showBackendAlert(\"error\", err.response.data.message);\r\n      }\r\n    } else {\r\n      showBackendAlert(\"error\", \"You are not logged in to access the group!\");\r\n    }\r\n  }, []);\r\n  useEffect(() => {\r\n    fetchUsersFromServer();\r\n    fetchGroupFromServer();\r\n  }, [fetchUsersFromServer, fetchGroupFromServer]);\r\n  let Members = [];\r\n  if (groupObj && users) {\r\n    Members = groupObj.members.map((el) => {\r\n      const user = users.find((ob) => ob.email === el.memberId);\r\n      const name = user.name;\r\n      const email = user.email;\r\n      const contactNo = user.contactNo;\r\n      return (\r\n        <Contact\r\n          key={el._id}\r\n          id={el._id}\r\n          name={name}\r\n          email={email}\r\n          contactNo={contactNo}\r\n        />\r\n      );\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className=\"members\">\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Name</th>\r\n            <th>Email Id</th>\r\n            <th>Contact No</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>{Members}</tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Contacts;\r\n","import React from \"react\";\r\n\r\nimport \"./LogDate.css\";\r\n\r\nconst LogDate = (props) => {\r\n  let d = new Date(props.date);\r\n  const month = d.toLocaleString(\"en-US\", { month: \"long\" });\r\n  const day = d.toLocaleString(\"en-US\", { day: \"2-digit\" });\r\n  const year = d.getFullYear();\r\n  return (\r\n    <div className=\"log-date\">\r\n      <div className=\"log-date__month\">{month}</div>\r\n      <div className=\"log-date__year\">{year}</div>\r\n      <div className=\"log-date__day\">{day}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LogDate;\r\n","import \"./Log.css\";\r\nimport Card from \"../../UI/Card\";\r\nimport LogDate from \"./LogDate\";\r\n\r\nconst Log = function (props) {\r\n  return (\r\n    <Card className=\"log\">\r\n      <LogDate date={props.date} />\r\n      <div className=\"log__description\">\r\n        <h2>{props.logText}</h2>\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Log;\r\n","import \"./TableRow.css\";\r\n\r\nconst TableRow = function (props) {\r\n  return (\r\n    <tr>\r\n      <td>{`${props.memberId}`}</td>\r\n      <td class=\"amount\">{`Rs. ${props.myShare}`}</td>\r\n      <td class=\"amount\">{`Rs. ${props.amountPaid}`}</td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default TableRow;\r\n","import Cookies from \"js-cookie\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport axios from \"axios\";\r\nimport { useState, useEffect, useCallback } from \"react\";\r\nimport { showBackendAlert } from \"./../../../utils/backendAlertsController\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport \"./Logs.css\";\r\nimport Log from \"./Log.js\";\r\nimport TableRow from \"./TableRow\";\r\n\r\nconst Logs = function (props) {\r\n  const params = useParams();\r\n  const groupId = params.groupId;\r\n  const [groupObj, setGroupObj] = useState(null);\r\n  const [user, setUser] = useState(null);\r\n\r\n  const fetchGroupFromServer = useCallback(async () => {\r\n    const token = Cookies.get(\"jwt\");\r\n    if (token) {\r\n      let decoded = jwt_decode(token);\r\n      console.log(decoded);\r\n      try {\r\n        const res = await axios({\r\n          method: \"GET\",\r\n          url: `https://group-expense-manager-api.herokuapp.com/api/v1/groups/${groupId}`,\r\n          headers: {\r\n            authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n\r\n        if (res.data.status === \"success\") {\r\n          console.log(\"hello\");\r\n          setGroupObj(res.data.data.group);\r\n          console.log(res.data.data.group);\r\n        }\r\n      } catch (err) {\r\n        showBackendAlert(\"error\", err);\r\n      }\r\n    } else {\r\n      showBackendAlert(\"error\", \"You are not logged in to access the group!\");\r\n    }\r\n  }, []);\r\n  const fetchUserFromServer = useCallback(async () => {\r\n    const token = Cookies.get(\"jwt\");\r\n    if (token) {\r\n      let decoded = jwt_decode(token);\r\n      console.log(decoded);\r\n      try {\r\n        const res = await axios({\r\n          method: \"GET\",\r\n          url: `https://group-expense-manager-api.herokuapp.com/api/v1/users/${decoded.id}`,\r\n          headers: {\r\n            authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n\r\n        if (res.data.status === \"success\") {\r\n          console.log(\"nhiiiiiiiiiii\");\r\n          console.log(res.data.data.user);\r\n          setUser(res.data.data.user);\r\n        }\r\n      } catch (err) {\r\n        showBackendAlert(\"error\", err);\r\n      }\r\n    } else {\r\n      showBackendAlert(\"error\", \"You are not logged in to access the group!\");\r\n    }\r\n  }, []);\r\n  useEffect(() => {\r\n    fetchUserFromServer();\r\n    fetchGroupFromServer();\r\n  }, [fetchUserFromServer, fetchGroupFromServer]);\r\n  let groupCreationLog;\r\n  let tableRows = [];\r\n  let logsAfterGroupCreation = [];\r\n  if (groupObj && user) {\r\n    for (let i = groupObj.logs.length - 1; i > 0; i--) {\r\n      const logItem = (\r\n        <Log date={groupObj.logs[i].date} logText={groupObj.logs[i].logText} />\r\n      );\r\n      logsAfterGroupCreation.push(logItem);\r\n    }\r\n    groupCreationLog = (\r\n      <Log date={groupObj.logs[0].date} logText={groupObj.logs[0].logText} />\r\n    );\r\n    tableRows = groupObj.members.map((ob) => (\r\n      <TableRow\r\n        memberId={ob.memberId}\r\n        myShare={ob.myShare}\r\n        amountPaid={ob.amountPaid}\r\n      />\r\n    ));\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {logsAfterGroupCreation}\r\n      {groupCreationLog}\r\n      <div className=\"logs\">\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Member Id</th>\r\n              <th>Share</th>\r\n              <th>Amount Paid</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>{tableRows}</tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Logs;\r\n","import \"./SettleUpMessage.css\";\r\nimport { useState } from \"react\";\r\n\r\nconst SettleUpMessage = function (props) {\r\n  const [message, setMessage] = useState(\"\");\r\n  const [status, setStatus] = useState(\"\");\r\n  if (props.debtMessage != message || status != props.debtStatusClassName) {\r\n    setMessage(props.debtMessage);\r\n    setStatus(props.debtStatusClassName);\r\n  }\r\n  return <div class={`debt-status ${status}`}>{message}</div>;\r\n};\r\n\r\nexport default SettleUpMessage;\r\n","import React from \"react\";\r\n\r\nimport classes from \"./ConfirmBtn.module.css\";\r\n\r\nconst Button = (props) => {\r\n  return (\r\n    <div className={classes.btnWrapper}>\r\n      <button\r\n        type={props.type || \"button\"}\r\n        onClick={props.onHide}\r\n        style={{ height: \"140%\", borderRadius: \"8px\", marginBottom: \"10%\" }}\r\n      >\r\n        {props.children}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import { useRef, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport FormModal from \"../../UI/FormModal\";\r\nimport Cookies from \"js-cookie\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport axios from \"axios\";\r\nimport classes from \"./ReminderModal.module.css\";\r\nimport ModalBtn from \"../../UI/ModalButton\";\r\nimport CloseBtn from \"./CloseBtn.js\";\r\nimport ConfirmBtn from \"./ConfirmBtn.js\";\r\nimport { showBackendAlert } from \"./../../../utils/backendAlertsController\";\r\n\r\nconst ReminderModal = function (props) {\r\n  const params = useParams();\r\n  const groupId = params.groupId;\r\n  const amountRemindedInputRef = useRef();\r\n  const [amountRemindedInputObj, setAmountRemindedInputObj] = useState({\r\n    amountRemindedInputIsValid: true,\r\n    amountRemindedInputErrorMsg: \"\",\r\n  });\r\n  const sendPaymentReminderEmail = async (sender, receiver, amount) => {\r\n    const token = Cookies.get(\"jwt\");\r\n    if (token) {\r\n      let decoded = jwt_decode(token);\r\n      console.log(decoded);\r\n      try {\r\n        const res = await axios({\r\n          method: \"POST\",\r\n          url: `https://group-expense-manager-api.herokuapp.com/api/v1/users/sendPaymentReminderEmail`,\r\n          data: {\r\n            sender,\r\n            receiver,\r\n            amount,\r\n            groupId,\r\n          },\r\n          headers: {\r\n            authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n\r\n        if (res.data.status === \"success\") {\r\n          showBackendAlert(\r\n            \"success\",\r\n            \"Payment Reminder Email successfully sent!\"\r\n          );\r\n        }\r\n      } catch (err) {\r\n        showBackendAlert(\"error\", err.response.data.message);\r\n      }\r\n    } else {\r\n      showBackendAlert(\r\n        \"error\",\r\n        \"You are not logged in to send the desired mail!\"\r\n      );\r\n    }\r\n  };\r\n  const pushLogToGroupDocument = async (reminderMessage, groupId) => {\r\n    const token = Cookies.get(\"jwt\");\r\n    if (token) {\r\n      let decoded = jwt_decode(token);\r\n      console.log(decoded);\r\n      try {\r\n        const res = await axios({\r\n          method: \"PATCH\",\r\n          url: `https://group-expense-manager-api.herokuapp.com/api/v1/groups/pushLogToGroupDocument`,\r\n          data: {\r\n            reminderMessage,\r\n            groupId,\r\n          },\r\n          headers: {\r\n            authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n\r\n        if (res.data.status === \"success\") {\r\n          showBackendAlert(\r\n            \"success\",\r\n            \"Reminder message successfully saved to logs!\"\r\n          );\r\n        }\r\n      } catch (err) {}\r\n    } else {\r\n      showBackendAlert(\r\n        \"error\",\r\n        \"You are not logged in to send the desired mail!\"\r\n      );\r\n    }\r\n  };\r\n  const formSubmissionHandler = function (event) {\r\n    event.preventDefault();\r\n    let amountRemindedInput = amountRemindedInputRef.current.value;\r\n    let amountRemindedInputIsValid = true,\r\n      amountRemindedInputErrorMsg = \"\";\r\n    const regEx = /^\\d+$/;\r\n\r\n    if (amountRemindedInput.trim() == \"\") {\r\n      amountRemindedInputIsValid = false;\r\n      amountRemindedInputErrorMsg = (\r\n        <p className=\"error-text\">Please enter amount field!</p>\r\n      );\r\n    } else if (!amountRemindedInput.trim().match(regEx)) {\r\n      amountRemindedInputIsValid = false;\r\n      amountRemindedInputErrorMsg = (\r\n        <p className=\"error-text\">\r\n          Please ensure that the input is a whole number!\r\n        </p>\r\n      );\r\n    } else if (\r\n      props.groupMemberObj.myShare - props.groupMemberObj.totalAmountPaid <\r\n      amountRemindedInput * 1\r\n    ) {\r\n      amountRemindedInputIsValid = false;\r\n      amountRemindedInputErrorMsg = (\r\n        <p className=\"error-text\">\r\n          The amount inputted cannot exceed the amount the person owe to the\r\n          group!\r\n        </p>\r\n      );\r\n    } else if (\r\n      props.signedInMember.totalAmountPaid -\r\n        props.signedInMember.amountReceived -\r\n        props.signedInMember.myShare <\r\n      amountRemindedInput * 1\r\n    ) {\r\n      amountRemindedInputIsValid = false;\r\n      amountRemindedInputErrorMsg = (\r\n        <p className=\"error-text\">\r\n          The amount inputted exceeded the amount you are actually owed!\r\n        </p>\r\n      );\r\n    }\r\n    if (!amountRemindedInputIsValid) {\r\n      setAmountRemindedInputObj({\r\n        amountRemindedInputIsValid,\r\n        amountRemindedInputErrorMsg,\r\n      });\r\n    } else {\r\n      setAmountRemindedInputObj({\r\n        amountRemindedInputIsValid,\r\n        amountRemindedInputErrorMsg,\r\n      });\r\n      for (let i = 0; i <= 100000000; i++) {}\r\n      const reminderMessage = `${props.signedInMember.memberId} has reminded ${props.groupMemberObj.memberId} to pay Rs ${amountRemindedInputRef.current.value}`;\r\n      sendPaymentReminderEmail(\r\n        props.signedInMember.memberId,\r\n        props.groupMemberObj.memberId,\r\n        amountRemindedInputRef.current.value\r\n      );\r\n      pushLogToGroupDocument(reminderMessage, groupId);\r\n      const currentDate = new Date();\r\n      const timestamp = currentDate.getTime();\r\n      //props.onAddGroupLog(currentDate, reminderMessage, groupId);\r\n      props.onHide();\r\n    }\r\n  };\r\n  const amountRemindedInputClasses =\r\n    !amountRemindedInputObj.amountRemindedInputIsValid\r\n      ? \"form-control invalid\"\r\n      : \"form-control\";\r\n  const labelStylesObj = {\r\n    position: \"relative\",\r\n    fontSize: \"105%\",\r\n    fontWeight: \"bold\",\r\n    marginTop: \"0.2rem\",\r\n    marginLeft: \"-5%\",\r\n    marginBottom: \"0.7rem\",\r\n  };\r\n  const inputStylesObj = {\r\n    position: \"relative\",\r\n    border: \"1px solid black\",\r\n    padding: \"0.15rem\",\r\n    marginBottom: \"0.9rem\",\r\n    marginLeft: \"-5%\",\r\n  };\r\n\r\n  return (\r\n    <FormModal className={classes.input} onHide={props.onHide}>\r\n      <form onSubmit={formSubmissionHandler}>\r\n        <div className={amountRemindedInputClasses}>\r\n          <label\r\n            style={labelStylesObj}\r\n            htmlFor=\"amount\"\r\n          >{`Remind ${props.groupMemberObj.memberId} to pay Rs`}</label>\r\n          <input\r\n            ref={amountRemindedInputRef}\r\n            id=\"amount\"\r\n            type=\"number\"\r\n            min=\"0\"\r\n            autoComplete=\"off\"\r\n            style={inputStylesObj}\r\n          />\r\n          {!amountRemindedInputObj.amountRemindedInputIsValid &&\r\n            amountRemindedInputObj.amountRemindedInputErrorMsg}\r\n        </div>\r\n        <ConfirmBtn type=\"submit\">Confirm</ConfirmBtn>\r\n      </form>\r\n    </FormModal>\r\n  );\r\n};\r\n\r\nexport default ReminderModal;\r\n","import { useState, Fragment } from \"react\";\r\nimport \"./IndebtedMember.css\";\r\nimport ReminderModal from \"./ReminderModal\";\r\n\r\nconst IndebtedMember = function (props) {\r\n  const [showReminderModal, setShowReminderModal] = useState(false);\r\n  const myShare = props.groupMemberObj.myShare;\r\n  const totalAmountPaid = props.groupMemberObj.totalAmountPaid;\r\n  const amountReceived = props.groupMemberObj.amountReceived;\r\n  const memberId = props.groupMemberObj.memberId;\r\n  let debtStyle;\r\n  let userDebtStatus;\r\n  const showReminderModalHandler = function () {\r\n    setShowReminderModal(true);\r\n  };\r\n  const hideReminderModalHandler = function () {\r\n    setShowReminderModal(false);\r\n  };\r\n  if (myShare + amountReceived > totalAmountPaid) {\r\n    userDebtStatus = `Owe Rs ${myShare - totalAmountPaid}`;\r\n    debtStyle = \"status-unpaid\";\r\n  } else if (myShare + amountReceived === totalAmountPaid) {\r\n    userDebtStatus = `Settled Up`;\r\n    debtStyle = \"status-paid\";\r\n  } else {\r\n    userDebtStatus = `Owed Rs ${totalAmountPaid - (myShare + amountReceived)}`;\r\n    debtStyle = \"status-pending\";\r\n  }\r\n  return (\r\n    <Fragment>\r\n      {showReminderModal && (\r\n        <ReminderModal\r\n          groupMemberObj={props.groupMemberObj}\r\n          onHide={hideReminderModalHandler}\r\n          onAddGroupLog={props.onAddGroupLog}\r\n          signedInMember={props.signedInMember}\r\n          groupName={props.groupName}\r\n        />\r\n      )}\r\n      <tr onClick={showReminderModalHandler}>\r\n        <td>{`${memberId}`}</td>\r\n        <td class=\"amount\">{`Rs. ${myShare}`}</td>\r\n        <td class=\"amount\">{`Rs. ${totalAmountPaid}`}</td>\r\n        <td class=\"amount\">{`Rs. ${amountReceived}`}</td>\r\n        <td>\r\n          <p class={`status ${debtStyle}`}>{userDebtStatus}</p>\r\n        </td>\r\n      </tr>\r\n    </Fragment>\r\n  );\r\n};\r\nexport default IndebtedMember;\r\n","import \"./IndebtedMembers.css\";\r\nimport IndebtedMember from \"./IndebtedMember\";\r\nimport { useState } from \"react\";\r\nconst IndebtedMembers = function (props) {\r\n  const [indebtedMembers, setIndebtedMembers] = useState([]);\r\n  if (indebtedMembers != props.indebtedMembers) {\r\n    setIndebtedMembers(props.indebtedMembers);\r\n  }\r\n\r\n  return (\r\n    <div className=\"members\">\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Member Id</th>\r\n            <th>Share</th>\r\n            <th>Amount Paid</th>\r\n            <th>Amount Received</th>\r\n            <th>Status</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>{props.indebtedMembers}</tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\nexport default IndebtedMembers;\r\n","import React from \"react\";\r\nimport { useRef, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport FormModal from \"../../UI/FormModal\";\r\nimport Cookies from \"js-cookie\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport axios from \"axios\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport classes from \"./PaymentConfirmationModal.module.css\";\r\nimport ModalBtn from \"../../UI/ModalButton\";\r\nimport CloseBtn from \"./CloseBtn.js\";\r\nimport ConfirmBtn from \"./ConfirmBtn.js\";\r\nimport { showBackendAlert } from \"./../../../utils/backendAlertsController\";\r\n\r\nconst PaymentConfirmationModal = function (props) {\r\n  const params = useParams();\r\n  const groupId = params.groupId;\r\n  const amountToBeConfirmedInputRef = useRef();\r\n  const meansOfPaymentInputRef = useRef();\r\n  const proofOfPaymentInputRef = useRef();\r\n  const [paymentToBeConfirmedInputObj, setPaymentToBeConfirmedInputObj] =\r\n    useState({\r\n      amountToBeConfirmedInputIsValid: true,\r\n      amountToBeConfirmedInputErrorMsg: \"\",\r\n      meansOfPaymentInputIsValid: true,\r\n      meansOfPaymentInputErrorMsg: \"\",\r\n      proofOfPaymentInputIsValid: true,\r\n    });\r\n  const sendPaymentConfirmationEmail = async (\r\n    sender,\r\n    receiver,\r\n    amount,\r\n    means,\r\n    fileData\r\n  ) => {\r\n    const token = Cookies.get(\"jwt\");\r\n    if (token) {\r\n      let decoded = jwt_decode(token);\r\n     // console.log(decoded);\r\n      const form = new FormData();\r\n      form.append(\"sender\", sender);\r\n      form.append(\"receiver\", receiver);\r\n      form.append(\"amount\", amount);\r\n      form.append(\"means\", means);\r\n      form.append(\"photo\", fileData);\r\n      form.append(\"groupId\", groupId);\r\n      try {\r\n        const res = await axios({\r\n          method: \"POST\",\r\n          url: `https://group-expense-manager-api.herokuapp.com/api/v1/users/sendPaymentConfirmationEmail`,\r\n          data: form,\r\n          headers: {\r\n            authorization: `Bearer ${token}`,\r\n            id:decoded.id,\r\n          },\r\n        });\r\n\r\n        if (res.data.status === \"success\") {\r\n          showBackendAlert(\"success\",\"Payment Confirmation Email successfully sent!\");\r\n          //console.log(res.data.data.group);\r\n        }\r\n      } catch (err) {\r\n        showBackendAlert(\"error\", err.response.data.message);\r\n      }\r\n    } else {\r\n      showBackendAlert(\r\n        \"error\",\r\n        \"You are not logged in to send the desired mail!\"\r\n      );\r\n    }\r\n  };\r\n  const formSubmissionHandler = function (event) {\r\n    event.preventDefault();\r\n    //console.log(event.target[2].files.length);\r\n    let amountToBeConfirmedInput = amountToBeConfirmedInputRef.current.value;\r\n    let amountToBeConfirmedInputIsValid = true,\r\n      amountToBeConfirmedInputErrorMsg = \"\";\r\n    let meansOfPaymentInput = meansOfPaymentInputRef.current.value;\r\n    let meansOfPaymentInputIsValid = true,\r\n      meansOfPaymentInputErrorMsg = \"\";\r\n    let proofOfPaymentInput = proofOfPaymentInputRef.current.value;\r\n    let proofOfPaymentInputIsValid = true,\r\n      proofOfPaymentInputErrorMsg = \"\";\r\n\r\n    console.log(\"File\");\r\n    console.log(proofOfPaymentInput);\r\n    const regEx = /^\\d+$/;\r\n\r\n    if (amountToBeConfirmedInput.trim() == \"\") {\r\n      amountToBeConfirmedInputIsValid = false;\r\n      amountToBeConfirmedInputErrorMsg = (\r\n        <p className=\"error-text\">Please enter amount field!</p>\r\n      );\r\n    } else if (!amountToBeConfirmedInput.trim().match(regEx)) {\r\n      amountToBeConfirmedInputIsValid = false;\r\n      amountToBeConfirmedInputErrorMsg = (\r\n        <p className=\"error-text\">\r\n          Please ensure that the input is a whole number!\r\n        </p>\r\n      );\r\n    } else if (\r\n      props.groupMemberObj.totalAmountPaid * 1 -\r\n        props.groupMemberObj.myShare * 1 -\r\n        props.groupMemberObj.amountReceived * 1 <\r\n      amountToBeConfirmedInput * 1\r\n    ) {\r\n      amountToBeConfirmedInputIsValid = false;\r\n      amountToBeConfirmedInputErrorMsg = (\r\n        <p className=\"error-text\">\r\n          The amount inputted cannot exceed the amount the beared up person has\r\n          been owed from the group!\r\n        </p>\r\n      );\r\n    } else if (\r\n      props.signedInMember.myShare * 1 +\r\n        props.signedInMember.amountReceived * 1 -\r\n        props.signedInMember.totalAmountPaid * 1 <\r\n      amountToBeConfirmedInput * 1\r\n    ) {\r\n      amountToBeConfirmedInputIsValid = false;\r\n      amountToBeConfirmedInputErrorMsg = (\r\n        <p className=\"error-text\">\r\n          The amount inputted exceeded the amount you owe to the group!\r\n        </p>\r\n      );\r\n    }\r\n    if (meansOfPaymentInput.trim() === \"\") {\r\n      meansOfPaymentInputIsValid = false;\r\n      meansOfPaymentInputErrorMsg = (\r\n        <p className=\"error-text\">\r\n          Please enter either of the means of payment or proof of payment\r\n          field(s)!\r\n        </p>\r\n      );\r\n    }\r\n\r\n    if (event.target[2].files.length === 0) {\r\n      proofOfPaymentInputIsValid = false;\r\n      proofOfPaymentInputErrorMsg = (\r\n        <p className=\"error-text\">\r\n          Please enter either of the means of payment or proof of payment\r\n          field(s)!\r\n        </p>\r\n      );\r\n    }\r\n\r\n    if (\r\n      !amountToBeConfirmedInputIsValid ||\r\n      (meansOfPaymentInput.trim() === \"\" && event.target[2].files.length === 0)\r\n    ) {\r\n      setPaymentToBeConfirmedInputObj({\r\n        amountToBeConfirmedInputIsValid,\r\n        amountToBeConfirmedInputErrorMsg,\r\n        meansOfPaymentInputIsValid,\r\n        meansOfPaymentInputErrorMsg,\r\n        proofOfPaymentInputIsValid,\r\n        proofOfPaymentInputErrorMsg,\r\n      });\r\n    } else {\r\n      setPaymentToBeConfirmedInputObj({\r\n        amountToBeConfirmedInputIsValid,\r\n        amountToBeConfirmedInputErrorMsg,\r\n        meansOfPaymentInputIsValid,\r\n        meansOfPaymentInputErrorMsg,\r\n        proofOfPaymentInputIsValid,\r\n        proofOfPaymentInputErrorMsg,\r\n      });\r\n      for (let i = 0; i <= 100000000; i++) {}\r\n      sendPaymentConfirmationEmail(\r\n        props.signedInMember.memberId,\r\n        props.groupMemberObj.memberId,\r\n        amountToBeConfirmedInput.trim(),\r\n        meansOfPaymentInput.trim(),\r\n        event.target[2].files[0]\r\n      );\r\n      // pushLogToGroupDocument(reminderMessage, groupId);\r\n      const currentDate = new Date();\r\n      const timestamp = currentDate.getTime();\r\n      //props.onAddGroupLog(currentDate, reminderMessage, groupId);\r\n      props.onHide();\r\n    }\r\n  };\r\n  const amountToBeConfirmedInputClasses =\r\n    !paymentToBeConfirmedInputObj.amountToBeConfirmedInputIsValid\r\n      ? \"form-control invalid\"\r\n      : \"form-control\";\r\n  const labelStylesObj = {\r\n    position: \"relative\",\r\n    fontSize: \"105%\",\r\n    fontWeight: \"bold\",\r\n    marginTop: \"0.2rem\",\r\n    marginLeft: \"-5%\",\r\n    marginBottom: \"0.7rem\",\r\n  };\r\n  const inputStylesObj = {\r\n    position: \"relative\",\r\n    border: \"1px solid black\",\r\n    padding: \"0.15rem\",\r\n    marginBottom: \"0.9rem\",\r\n    marginLeft: \"-5%\",\r\n  };\r\n\r\n  return (\r\n    <FormModal className={classes.input} onHide={props.onHide}>\r\n      <FontAwesomeIcon icon=\"fa-solid fa-xmark\" />\r\n      <form onSubmit={formSubmissionHandler}>\r\n        <div className={amountToBeConfirmedInputClasses}>\r\n          <label\r\n            style={labelStylesObj}\r\n            htmlFor=\"amount\"\r\n          >{`Amount you ask for email confirmation (in Rs.)`}</label>\r\n          <input\r\n            ref={amountToBeConfirmedInputRef}\r\n            id=\"amount\"\r\n            type=\"number\"\r\n            min=\"0\"\r\n            autoComplete=\"off\"\r\n            style={inputStylesObj}\r\n          />\r\n          {!paymentToBeConfirmedInputObj.amountToBeConfirmedInputIsValid &&\r\n            paymentToBeConfirmedInputObj.amountToBeConfirmedInputErrorMsg}\r\n        </div>\r\n        <div>\r\n          <label\r\n            style={labelStylesObj}\r\n            htmlFor=\"means\"\r\n          >{`Short description for your means of payment`}</label>\r\n          <input\r\n            ref={meansOfPaymentInputRef}\r\n            id=\"means\"\r\n            min=\"0\"\r\n            autoComplete=\"off\"\r\n            style={inputStylesObj}\r\n          />\r\n          {!paymentToBeConfirmedInputObj.meansOfPaymentInputIsValid &&\r\n            paymentToBeConfirmedInputObj.meansOfPaymentInputErrorMsg}\r\n        </div>\r\n        <div>\r\n          <label style={labelStylesObj} htmlFor=\"attachment\">\r\n            Attachment for Proof of Payment\r\n          </label>\r\n          <input\r\n            type=\"file\"\r\n            ref={proofOfPaymentInputRef}\r\n            id=\"attachment\"\r\n            style={inputStylesObj}\r\n          />\r\n          {!paymentToBeConfirmedInputObj.proofOfPaymentInputIsValid &&\r\n            paymentToBeConfirmedInputObj.proofOfPaymentInputErrorMsg}\r\n        </div>\r\n        <ConfirmBtn type=\"submit\">Confirm</ConfirmBtn>\r\n      </form>\r\n    </FormModal>\r\n  );\r\n};\r\n\r\nexport default PaymentConfirmationModal;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { useState, Fragment } from \"react\";\r\nimport PaymentConfirmationModal from \"./PaymentConfirmationModal\";\r\nimport \"./BearedUpMember.css\";\r\n\r\nconst BearedUpMember = function (props) {\r\n  const [showPaymentConfirmationModal, setShowPaymentConfirmationModal] =\r\n    useState(false);\r\n  const showPaymentConfirmationModalHandler = function () {\r\n    setShowPaymentConfirmationModal(true);\r\n  };\r\n  const hidePaymentConfirmationModalHandler = function () {\r\n    setShowPaymentConfirmationModal(false);\r\n  };\r\n\r\n  const myShare = props.groupMemberObj.myShare;\r\n  const totalAmountPaid = props.groupMemberObj.totalAmountPaid;\r\n  const amountReceived = props.groupMemberObj.amountReceived;\r\n  const memberId = props.groupMemberObj.memberId;\r\n  let debtStyle;\r\n  let userDebtStatus;\r\n  if (myShare + amountReceived > totalAmountPaid) {\r\n    userDebtStatus = `Owe Rs ${myShare - totalAmountPaid}`;\r\n    debtStyle = \"status-unpaid\";\r\n  } else if (myShare + amountReceived === totalAmountPaid) {\r\n    userDebtStatus = `Settled Up`;\r\n    debtStyle = \"status-paid\";\r\n  } else {\r\n    userDebtStatus = `Owed Rs ${totalAmountPaid - (myShare + amountReceived)}`;\r\n    debtStyle = \"status-pending\";\r\n  }\r\n  return (\r\n    <Fragment>\r\n      {showPaymentConfirmationModal && (\r\n        <PaymentConfirmationModal\r\n          groupMemberObj={props.groupMemberObj}\r\n          onHide={hidePaymentConfirmationModalHandler}\r\n          onAddGroupLog={props.onAddGroupLog}\r\n          signedInMember={props.signedInMember}\r\n          groupName={props.groupName}\r\n        />\r\n      )}\r\n      <tr onClick={showPaymentConfirmationModalHandler}>\r\n        <td>{`${memberId}`}</td>\r\n        <td class=\"amount\">{`Rs. ${myShare}`}</td>\r\n        <td class=\"amount\">{`Rs. ${totalAmountPaid}`}</td>\r\n        <td class=\"amount\">{`Rs. ${amountReceived}`}</td>\r\n        <td>\r\n          <p class={`status ${debtStyle}`}>{userDebtStatus}</p>\r\n        </td>\r\n      </tr>\r\n    </Fragment>\r\n  );\r\n};\r\nexport default BearedUpMember;\r\n","import \"./BearedUpMembers.css\";\r\nimport BearedUpMember from \"./BearedUpMember\";\r\nconst BearedUpMembers = function (props) {\r\n  return (\r\n    <div className=\"members\">\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Member Id</th>\r\n            <th>Share</th>\r\n            <th>Amount Paid</th>\r\n            <th>Amount Received</th>\r\n            <th>Status</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>{props.bearedUpMembers}</tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\nexport default BearedUpMembers;\r\n","import { NavLink, useHistory } from \"react-router-dom\";\r\nimport AuthContext from \"./../../../store/auth-context\";\r\nimport { useContext } from \"react\";\r\n\r\nimport classes from \"./MainNavigation.module.css\";\r\n\r\nconst MainNavigation = (props) => {\r\n  const history = useHistory();\r\n  const authCtx = useContext(AuthContext);\r\n  const logoutHandler = function () {\r\n    authCtx.logout();\r\n    history.replace(\"/login\");\r\n  };\r\n  return (\r\n    <header className={classes.header}>\r\n      <div className={classes.logo}>\r\n        {props.groupObj.name}{\" \"}\r\n        <span\r\n          style={{ fontStyle: \"italic\", fontSize: \"65%\" }}\r\n        >{`(Rs. ${props.groupObj.worth} splitted)`}</span>\r\n      </div>\r\n      <nav className={classes.nav}>\r\n        <ul>\r\n          <li>\r\n            <NavLink\r\n              to={`/groups/${props.groupObj._id}`}\r\n              activeClassName={classes.active}\r\n              exact\r\n            >\r\n              Members\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink\r\n              to={`/groups/${props.groupObj._id}/settle-up`}\r\n              activeClassName={classes.active}\r\n              exact\r\n            >\r\n              Settle Up\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink\r\n              to={`/groups/${props.groupObj._id}/logs`}\r\n              activeClassName={classes.active}\r\n              exact\r\n            >\r\n              Logs\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink\r\n              to={`/groups/${props.groupObj._id}/contacts`}\r\n              activeClassName={classes.active}\r\n              exact\r\n            >\r\n              Contacts\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink to=\"/groups\" activeClassName={classes.active} exact>\r\n              Home\r\n            </NavLink>\r\n          </li>\r\n          <li onClick={logoutHandler}>\r\n            <NavLink to={`/logout`} activeClassName={classes.active} exact>\r\n              Logout\r\n            </NavLink>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default MainNavigation;\r\n","import { Fragment } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport classes from \"./Layout.module.css\";\r\nimport MainNavigation from \"./MainNavigation\";\r\n\r\nconst Layout = (props) => {\r\n  const params = useParams();\r\n  const groupId = params.groupId;\r\n  if (props.Original_Dummy_Groups.length !== 0) {\r\n    const groupObj = props.Original_Dummy_Groups.find(\r\n      (ob) => ob._id === groupId\r\n    );\r\n    return (\r\n      <Fragment>\r\n        <MainNavigation groupObj={groupObj} />\r\n        <main className={classes.main}>{props.children}</main>\r\n      </Fragment>\r\n    );\r\n  } else {\r\n    return <Fragment></Fragment>;\r\n  }\r\n};\r\n\r\nexport default Layout;\r\n","import React from \"react\";\r\n\r\nimport classes from \"./ConfirmBtn.module.css\";\r\n\r\nconst Button = (props) => {\r\n  return (\r\n    <div className={classes.btnWrapper}>\r\n      <button\r\n        type={props.type || \"button\"}\r\n        onClick={props.onHide}\r\n        style={{ height: \"140%\", borderRadius: \"8px\", marginBottom: \"10%\" }}\r\n      >\r\n        {props.children}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport { useRef, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport FormModal from \"../UI/FormModal\";\r\nimport Cookies from \"js-cookie\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport axios from \"axios\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport classes from \"./PasswordUpdateFormModal.module.css\";\r\nimport ModalBtn from \"../UI/ModalButton\";\r\nimport ConfirmBtn from \"./ConfirmBtn.js\";\r\nimport { showBackendAlert } from \"./../../utils/backendAlertsController\";\r\n\r\nconst PasswordUpdateFormModal = function (props) {\r\n  const currentPasswordInputRef = useRef();\r\n  const newPasswordInputRef = useRef();\r\n  const confirmNewPasswordInputRef = useRef();\r\n  const updateMyPassword = async (\r\n    currentPassword,\r\n    newPassword,\r\n    confirmNewPassword\r\n  ) => {\r\n    const token = Cookies.get(\"jwt\");\r\n    if (token) {\r\n      let decoded = jwt_decode(token);\r\n      console.log(decoded);\r\n\r\n      try {\r\n        const res = await axios({\r\n          method: \"PATCH\",\r\n          url: `https://group-expense-manager-api.herokuapp.com/api/v1/users/updateMyPassword`,\r\n          data: {\r\n            passwordCurrent: currentPassword,\r\n            password: newPassword,\r\n            passwordConfirm: confirmNewPassword,\r\n          },\r\n          headers: {\r\n            authorization: `Bearer ${token}`,\r\n            id: decoded.id,\r\n          },\r\n        });\r\n\r\n        if (res.data.status === \"success\") {\r\n          showBackendAlert(\"success\", \"Password updated successfully!\");\r\n        }\r\n      } catch (err) {\r\n        showBackendAlert(\"error\", err.response.data.message);\r\n      }\r\n    } else {\r\n      showBackendAlert(\"error\", \"You are not logged in to update password!\");\r\n    }\r\n  };\r\n  /*const pushLogToGroupDocument = async (reminderMessage, groupId) => {\r\n    const token = Cookies.get(\"jwt\");\r\n    if (token) {\r\n      let decoded = jwt_decode(token);\r\n      console.log(decoded);\r\n      try {\r\n        const res = await axios({\r\n          method: \"PATCH\",\r\n          url: `http://127.0.0.1:8080/api/v1/groups/pushLogToGroupDocument`,\r\n          data: {\r\n            reminderMessage,\r\n            groupId,\r\n          },\r\n          headers: {\r\n            authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n\r\n        if (res.data.status === \"success\") {\r\n          showBackendAlert(\r\n            \"success\",\r\n            \"Reminder message successfully saved to logs!\"\r\n          );\r\n          console.log(res.data.data.group);\r\n        }\r\n      } catch (err) {\r\n        showBackendAlert(\"error\", err);\r\n      }\r\n    } else {\r\n      showBackendAlert(\r\n        \"error\",\r\n        \"You are not logged in to send the desired mail!\"\r\n      );\r\n    }\r\n  };*/\r\n  const formSubmissionHandler = function (event) {\r\n    event.preventDefault();\r\n    const currentPassword = currentPasswordInputRef.current.value;\r\n    const newPassword = newPasswordInputRef.current.value;\r\n    const confirmNewPassword = confirmNewPasswordInputRef.current.value;\r\n\r\n    updateMyPassword(currentPassword, newPassword, confirmNewPassword);\r\n    props.onHide();\r\n  };\r\n  const labelStylesObj = {\r\n    position: \"relative\",\r\n    fontSize: \"105%\",\r\n    fontWeight: \"bold\",\r\n    marginTop: \"0.2rem\",\r\n    marginLeft: \"-5%\",\r\n    marginBottom: \"0.7rem\",\r\n  };\r\n  const inputStylesObj = {\r\n    position: \"relative\",\r\n    border: \"1px solid black\",\r\n    padding: \"0.15rem\",\r\n    marginBottom: \"0.9rem\",\r\n    marginLeft: \"-5%\",\r\n  };\r\n\r\n  return (\r\n    <FormModal className={classes.input} onHide={props.onHide}>\r\n      <FontAwesomeIcon icon=\"fa-solid fa-xmark\" />\r\n      <form onSubmit={formSubmissionHandler}>\r\n        <div>\r\n          <label\r\n            style={labelStylesObj}\r\n            htmlFor=\"currentPassword\"\r\n          >{`Enter your current password`}</label>\r\n          <input\r\n            ref={currentPasswordInputRef}\r\n            id=\"currentPassword\"\r\n            type=\"password\"\r\n            autoComplete=\"off\"\r\n            style={inputStylesObj}\r\n          />\r\n        </div>\r\n        <div>\r\n          <label\r\n            style={labelStylesObj}\r\n            htmlFor=\"newPassword\"\r\n          >{`Enter your new password`}</label>\r\n          <input\r\n            ref={newPasswordInputRef}\r\n            id=\"newPassword\"\r\n            type=\"password\"\r\n            autoComplete=\"off\"\r\n            style={inputStylesObj}\r\n          />\r\n        </div>\r\n        <div>\r\n          <label\r\n            style={labelStylesObj}\r\n            htmlFor=\"confirmNewPassword\"\r\n          >{`Confirm your new password`}</label>\r\n          <input\r\n            ref={confirmNewPasswordInputRef}\r\n            id=\"confirmNewPassword\"\r\n            type=\"password\"\r\n            autoComplete=\"off\"\r\n            style={inputStylesObj}\r\n          />\r\n        </div>\r\n        <ConfirmBtn type=\"submit\">Update Password</ConfirmBtn>\r\n      </form>\r\n    </FormModal>\r\n  );\r\n};\r\n\r\nexport default PasswordUpdateFormModal;\r\n","import React from \"react\";\r\nimport { useRef, useState } from \"react\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport classes from \"./PasswordResetForm.module.css\";\r\nimport { showBackendAlert } from \"./../../utils/backendAlertsController\";\r\n\r\nconst PasswordResetForm = function () {\r\n  const history = useHistory(\"/\");\r\n  const passwordInputRef = useRef();\r\n  const passwordConfirmInputRef = useRef();\r\n  const params = useParams();\r\n  const token = params.token;\r\n  const resetPassword = async (password, passwordConfirm) => {\r\n    try {\r\n      const res = await axios({\r\n        method: \"PATCH\",\r\n        url: `https://group-expense-manager-api.herokuapp.com/api/v1/users/resetPassword/${token}`,\r\n        data: {\r\n          password,\r\n          passwordConfirm,\r\n        },\r\n      });\r\n\r\n      if (res.data.status === \"success\") {\r\n        showBackendAlert(\"success\", \"Password resetted successfully!\");\r\n      }\r\n    } catch (err) {\r\n      showBackendAlert(\"error\", err.response.data.message);\r\n    }\r\n  };\r\n\r\n  const formSubmissionHandler = function (event) {\r\n    event.preventDefault();\r\n    const password = passwordInputRef.current.value;\r\n    const passwordConfirm = passwordConfirmInputRef.current.value;\r\n\r\n    resetPassword(password, passwordConfirm);\r\n    passwordInputRef.current.value = \"\";\r\n    passwordConfirmInputRef.current.value = \"\";\r\n  };\r\n\r\n  return (\r\n    <div className={classes.pageCoverGrey}>\r\n      <div className={classes[\"form-container\"]}>\r\n        <form className={classes[\"form-wrap\"]} onSubmit={formSubmissionHandler}>\r\n          <h2>Reset Password</h2>\r\n          <div className={classes[\"form-box\"]}>\r\n            <input\r\n              type=\"password\"\r\n              ref={passwordInputRef}\r\n              placeholder=\"Enter your new password\"\r\n            />\r\n          </div>\r\n          <div className={classes[\"form-box\"]}>\r\n            <input\r\n              type=\"password\"\r\n              ref={passwordConfirmInputRef}\r\n              placeholder=\"Confirm your new password\"\r\n            />\r\n          </div>\r\n          <div className={classes[\"form-submit\"]}>\r\n            <input type=\"submit\" value=\"Confirm\" />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PasswordResetForm;\r\n","import axios from \"axios\";\nimport { Route, Switch, useHistory, Redirect } from \"react-router-dom\";\nimport Header from \"./components/Groups/Header\";\nimport Groups from \"./components/Groups/Groups\";\nimport SideBar from \"./components/Sidebar/SideBar\";\nimport AddNewGroupBtn from \"./components/AddNewGroup/AddNewGroupBtn\";\nimport NewGroupModalContent from \"./components/AddNewGroup/NewGroupModalContent\";\nimport NewGroupForm from \"./components/NewGroupForm/NewGroupForm\";\nimport Login from \"./components/Login/Login\";\nimport Members from \"./components/GroupDetail/Members/Members\";\nimport Contacts from \"./components/GroupDetail/Contacts/Contacts\";\nimport Logs from \"./components/GroupDetail/Logs/Logs\";\nimport SettleUp from \"./components/GroupDetail/SettleUp/SettleUp\";\nimport classes from \"./components/UI/Background.module.css\";\nimport React, { useState, useContext, useEffect, useCallback } from \"react\";\nimport { showBackendAlert } from \"./utils/backendAlertsController\";\nimport Layout from \"./components/GroupDetail/Layout/Layout\";\nimport PasswordUpdateFormModal from \"./components/PasswordUpdateFormModal/PasswordUpdateFormModal\";\nimport PasswordResetForm from \"./components/PasswordResetForm/PasswordResetForm\";\nimport { useLocation } from \"react-router-dom\";\nimport Cookies from \"js-cookie\";\nimport AuthContext from \"./store/auth-context\";\nimport jwt_decode from \"jwt-decode\";\n\nconst Dummy_Users = [];\n\nconst Original_Dummy_Groups = [];\n\nfunction App() {\n  const history = useHistory(\"/\");\n  const [Dummy_Groups, setDummy_Groups] = useState([]);\n  const [user, setUser] = useState(null);\n  const [initialisedGroupId, setInitialisedGroupId] = useState(\"\");\n  const [showPasswordUpdateFormModal, setShowPasswordUpdateFormModal] =\n    useState(false);\n  const showPasswordUpdateFormModalHandler = function () {\n    setShowPasswordUpdateFormModal(true);\n  };\n  const hidePasswordUpdateFormModalHandler = function () {\n    setShowPasswordUpdateFormModal(false);\n  };\n  const initialiseGroupIdHandler = function (groupId) {\n    setInitialisedGroupId(groupId);\n  };\n  const fetchMyGroupsFromServer = useCallback(async () => {\n    const token = Cookies.get(\"jwt\");\n    if (token) {\n      let decoded = jwt_decode(token);\n      console.log(decoded);\n      try {\n        const res = await axios({\n          method: \"GET\",\n          url: `https://group-expense-manager-api.herokuapp.com/api/v1/groups/myGroups/${decoded.id}`,\n          headers: {\n            authorization: `Bearer ${token}`,\n          },\n        });\n\n        if (res.data.status === \"success\") {\n          setDummy_Groups(res.data.data.myGroups);\n        }\n      } catch (err) {\n        showBackendAlert(\"error\", err.response.data.message);\n      }\n    }\n  }, []);\n  const fetchUserFromServer = useCallback(async () => {\n    const token = Cookies.get(\"jwt\");\n    if (token) {\n      let decoded = jwt_decode(token);\n      console.log(decoded);\n      try {\n        const res = await axios({\n          method: \"GET\",\n          url: `https://group-expense-manager-api.herokuapp.com/api/v1/users/${decoded.id}`,\n          headers: {\n            authorization: `Bearer ${token}`,\n          },\n        });\n\n        if (res.data.status === \"success\") {\n          setUser(res.data.data.user);\n        }\n      } catch (err) {\n        showBackendAlert(\"error\", err.response.data.message);\n      }\n    }\n  }, []);\n  useEffect(() => {\n    fetchUserFromServer();\n    fetchMyGroupsFromServer();\n  }, [fetchUserFromServer, fetchMyGroupsFromServer]);\n\n  const [showGroupFormModal, setShowGroupFormModal] = useState(false);\n  const [groupNameInput, setGroupNameInput] = useState(\"\");\n  const [totalAmountInput, setTotalAmountInput] = useState(\"\");\n  const authCtx = useContext(AuthContext);\n  const location = useLocation();\n  const isLoggedIn = authCtx.isLoggedIn;\n\n  if (location.pathname === \"/login\" && isLoggedIn) {\n    history.replace(\"/groups\");\n  }\n\n  /*if (!isLoggedIn) {\n    history.push(\"/login\");\n  }*/\n\n  const showGroupFormModalHandler = function () {\n    setShowGroupFormModal(true);\n  };\n  const hideGroupFormModalHandler = function () {\n    setShowGroupFormModal(false);\n  };\n  const groupFormInitialiser = function (\n    groupNameInputTemp,\n    totalAmountInputTemp\n  ) {\n    setGroupNameInput(groupNameInputTemp);\n    setTotalAmountInput(totalAmountInputTemp);\n  };\n  const AddGroupLogHandler = function (date, logText, groupId) {\n    const log = { date, logText };\n    //alert(groupId);\n    const groupObj = Dummy_Groups.find((el) => el.id === groupId);\n    groupObj.logs.push(log);\n    const filteredGroups = Dummy_Groups.filter((el) => el.id !== groupId);\n    filteredGroups.push(groupObj);\n    setDummy_Groups(filteredGroups);\n  };\n  return (\n    <React.Fragment>\n      {!isLoggedIn && !location.pathname.startsWith(\"/resetPassword\") && (\n        <Redirect to=\"/login\" />\n      )}\n      <Switch>\n        <Route path=\"/resetPassword/:token\" exact>\n          <PasswordResetForm />\n        </Route>\n        <Route path=\"/groups\" exact>\n          <div className={classes.pageCoverViolet}>\n            {showGroupFormModal && (\n              <NewGroupModalContent\n                onShow={showGroupFormModalHandler}\n                onHide={hideGroupFormModalHandler}\n                onSubmit={groupFormInitialiser}\n                onInitialiseGroupId={initialiseGroupIdHandler}\n                initialisedGroupId={initialisedGroupId}\n              />\n            )}\n            {showPasswordUpdateFormModal && (\n              <PasswordUpdateFormModal\n                onHide={hidePasswordUpdateFormModalHandler}\n              />\n            )}\n            <SideBar\n              user={user}\n              onShowPasswordUpdateForm={showPasswordUpdateFormModalHandler}\n            />\n            <Header />\n            <AddNewGroupBtn onShow={showGroupFormModalHandler} />\n            <Groups users={Dummy_Users} groups={Dummy_Groups} user={user} />\n          </div>\n        </Route>\n        <Route path=\"/create-new-group\" exact>\n          <div className={classes.pageCoverYellow}>\n            <NewGroupForm\n              groupNameInput={groupNameInput}\n              totalAmountInput={totalAmountInput}\n              Dummy_Users={Dummy_Users}\n              initialisedGroupId={initialisedGroupId}\n              user={user}\n            />\n          </div>\n        </Route>\n        <Route path=\"/groups/:groupId\">\n          <Layout Original_Dummy_Groups={Dummy_Groups}>\n            <Switch>\n              <Route path=\"/groups/:groupId\" exact>\n                <Members\n                  Original_Dummy_Groups={Dummy_Groups}\n                  Dummy_Users={Dummy_Users}\n                  user={user}\n                />\n              </Route>\n              <Route path=\"/groups/:groupId/settle-up\" exact>\n                <SettleUp\n                  Original_Dummy_Groups={Dummy_Groups}\n                  onAddGroupLog={AddGroupLogHandler}\n                />\n              </Route>\n              <Route path=\"/groups/:groupId/logs\" exact>\n                <Logs Original_Dummy_Groups={Dummy_Groups} />\n              </Route>\n              <Route path=\"/groups/:groupId/contacts\" exact>\n                <Contacts\n                  Original_Dummy_Groups={Dummy_Groups}\n                  Dummy_Users={Dummy_Users}\n                />\n              </Route>\n            </Switch>\n          </Layout>\n        </Route>\n        <Route path=\"/login\">\n          <Login />\n        </Route>\n        <Route path=\"/logout\">\n          <Redirect to=\"/login\" />\n        </Route>\n      </Switch>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { AuthContextProvider } from \"./store/auth-context\";\n\nReactDOM.render(\n  <AuthContextProvider>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </AuthContextProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}